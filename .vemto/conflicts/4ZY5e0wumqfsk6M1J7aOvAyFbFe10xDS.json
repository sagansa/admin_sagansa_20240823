{
    "conflicts": [
        {
            "id": "a70b916f-efe7-420f-a82c-573d8f35e197",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Bulks\\ValidBulkAction;\nuse App\\Filament\\Clusters\\Stock;\nuse App\\Filament\\Columns\\ImageOpenUrlColumn;\nuse App\\Filament\\Columns\\StatusColumn;\nuse App\\Filament\\Forms\\ImageInput;\nuse App\\Filament\\Forms\\Notes;\nuse App\\Filament\\Forms\\StatusSelectInput;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\UtilityUsage;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\UtilityUsageResource\\Pages;\nuse App\\Models\\Utility;\nuse Filament\\Tables\\Actions\\ActionGroup;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Collection;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass UtilityUsageResource extends Resource\n{\n    protected static ?string $model = UtilityUsage::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $cluster = Stock::class;\n\n    protected static ?string $navigationGroup = 'Consumption';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.utilityUsages.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.utilityUsages.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.utilityUsages.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    ImageInput::make('image')\n\n                        ->directory('images/UtilityUsage'),\n\n                    Select::make('utility_id')\n                        ->required()\n                        ->relationship(\n                            name: 'utility',\n                            modifyQueryUsing: fn (Builder $query) => $query->where('status', '1'),\n                        )\n                        ->getOptionLabelFromRecordUsing(fn (Utility $record) => \"{$record->utility_name}\")\n                        ->preload(),\n\n                    TextInput::make('result')\n                        ->required()\n                        ->numeric(),\n\n                    StatusSelectInput::make('status')\n                        ->required()\n                        ->hidden(fn ($operation) => $operation === 'create'),\n\n                    Notes::make('notes'),\n\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        $utilityUsage = UtilityUsage::query();\n\n        if (!Auth::user()->hasRole('admin')) {\n            $utilityUsage->where('created_by_id', Auth::id());\n        }\n\n        return $table\n            ->poll('60s')\n            ->query($utilityUsage)\n            ->columns([\n                ImageOpenUrlColumn::make('image')\n                    ->visibility('public')\n                    ->url(fn($record) => asset('storage/' . $record->image)),\n\n                TextColumn::make('created_at')\n                    ->sortable()\n                    ->date(),\n\n                TextColumn::make('utility.utility_column_name'),\n\n                TextColumn::make('result')->numeric(thousandsSeparator: '.'),\n\n                StatusColumn::make('status'),\n\n                TextColumn::make('createdBy.name'),\n\n                TextColumn::make('approvedBy.name'),\n            ])\n            ->filters([\n\n                SelectFilter::make('utility_id')\n                    ->label('Utility')\n                    ->relationship(\n                        name: 'utility',\n                        titleAttribute: 'utility_name',\n                        modifyQueryUsing: fn (Builder $query) => $query,\n                    )\n                    ->getOptionLabelFromRecordUsing(fn (Utility $record) => \"{$record->utility_name}\"),\n\n            ])\n            ->actions([\n                ActionGroup::make([\n                    Tables\\Actions\\EditAction::make(),\n                    Tables\\Actions\\ViewAction::make(),\n                ])\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                    ValidBulkAction::make('setStatusToValid')\n                        ->action(function (Collection $records) {\n                            UtilityUsage::whereIn('id', $records->pluck('id'))->update(['status' => 2]);\n                        }),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListUtilityUsages::route('/'),\n            'create' => Pages\\CreateUtilityUsage::route('/create'),\n            'view' => Pages\\ViewUtilityUsage::route('/{record}'),\n            'edit' => Pages\\EditUtilityUsage::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\UtilityUsage;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\UtilityUsageResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\UtilityUsageResource\\RelationManagers;\n\nclass UtilityUsageResource extends Resource\n{\n    protected static ?string $model = UtilityUsage::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.utilityUsages.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.utilityUsages.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.utilityUsages.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    FileUpload::make('image')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    Select::make('utility_id')\n                        ->required()\n                        ->relationship('utility', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('result')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('created_by_id')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('approved_by_id')\n                        ->required()\n                        ->relationship('createdBy', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    RichEditor::make('notes')\n                        ->nullable()\n                        ->string()\n                        ->fileAttachmentsVisibility('public'),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('utility.name'),\n\n                TextColumn::make('result'),\n\n                TextColumn::make('status'),\n\n                TextColumn::make('created_by_id'),\n\n                TextColumn::make('createdBy.name'),\n\n                TextColumn::make('notes')->limit(255),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListUtilityUsages::route('/'),\n            'create' => Pages\\CreateUtilityUsage::route('/create'),\n            'view' => Pages\\ViewUtilityUsage::route('/{record}'),\n            'edit' => Pages\\EditUtilityUsage::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}