{
    "conflicts": [
        {
            "id": "ad4cf016-951f-4319-af17-5b9fe26076f1",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\RemainingStockResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\DateTimePicker;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\nuse App\\Filament\\Resources\\Panel\\RemainingStockResource;\nuse App\\Models\\Product;\n\nclass ProductsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'products';\n\n    protected static ?string $recordTitleAttribute = 'name';\n\n    public function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 1])->schema([\n                TextInput::make('name')\n                    ->required()\n                    ->string()\n                    ->autofocus(),\n\n                Select::make('unit_id')\n                    // ->required()\n                    ->disabled()\n                    ->relationship('unit', 'unit')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n\n                TextInput::make('quantity')\n                    ->required()\n                    ->numeric()\n                    ->step(1)\n                    ->autofocus(),\n            ]),\n        ]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('quantity')\n                    ->suffix(function ($record) {\n                        $product = Product::find($record->id);\n                        return $product ? $product->unit->unit : '';\n                    }),\n            ])\n            ->filters([])\n            ->headerActions([\n                // Tables\\Actions\\CreateAction::make(),\n\n                // Tables\\Actions\\AttachAction::make()->form(\n                //     fn(Tables\\Actions\\AttachAction $action): array => [\n                //         $action->getRecordSelect(),\n\n                //         TextInput::make('quantity')\n                //             ->required()\n                //             ->numeric()\n                //             ->step(1)\n                //             ->autofocus(),\n                //     ]\n                // ),\n            ])\n            ->actions([\n                // Tables\\Actions\\EditAction::make(),\n                // Tables\\Actions\\DeleteAction::make(),\n                // Tables\\Actions\\DetachAction::make(),\n            ])\n            ->bulkActions([\n                // Tables\\Actions\\BulkActionGroup::make([\n                //     Tables\\Actions\\DeleteBulkAction::make(),\n\n                //     Tables\\Actions\\DetachBulkAction::make(),\n                // ]),\n            ]);\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\RemainingStockResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\DateTimePicker;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\nuse App\\Filament\\Resources\\Panel\\RemainingStockResource;\n\nclass ProductsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'products';\n\n    protected static ?string $recordTitleAttribute = 'name';\n\n    public function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 1])->schema([\n                TextInput::make('name')\n                    ->required()\n                    ->string()\n                    ->autofocus(),\n\n                Select::make('unit_id')\n                    ->required()\n                    ->relationship('unit', 'name')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n\n                TextInput::make('slug')\n                    ->required()\n                    ->string(),\n\n                TextInput::make('sku')\n                    ->nullable()\n                    ->string(),\n\n                TextInput::make('barcode')\n                    ->nullable()\n                    ->string(),\n\n                RichEditor::make('description')\n                    ->nullable()\n                    ->string()\n                    ->fileAttachmentsVisibility('public'),\n\n                FileUpload::make('image')\n                    ->rules(['image'])\n                    ->nullable()\n                    ->maxSize(1024)\n                    ->image()\n                    ->imageEditor()\n                    ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                TextInput::make('request')\n                    ->required()\n                    ->numeric()\n                    ->step(1),\n\n                TextInput::make('remaining')\n                    ->required()\n                    ->numeric()\n                    ->step(1),\n\n                Select::make('payment_type_id')\n                    ->required()\n                    ->relationship('paymentType', 'name')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n\n                Select::make('material_group_id')\n                    ->required()\n                    ->relationship('materialGroup', 'name')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n\n                Select::make('online_category_id')\n                    ->required()\n                    ->relationship('onlineCategory', 'name')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n\n                DateTimePicker::make('deleted_at')\n                    ->rules(['date'])\n                    ->nullable()\n                    ->native(false),\n\n                TextInput::make('quantity')\n                    ->required()\n                    ->numeric()\n                    ->step(1)\n                    ->autofocus(),\n            ]),\n        ]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('unit.name'),\n\n                TextColumn::make('slug'),\n\n                TextColumn::make('sku'),\n\n                TextColumn::make('barcode'),\n\n                TextColumn::make('description')->limit(255),\n\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('request'),\n\n                TextColumn::make('remaining'),\n\n                TextColumn::make('paymentType.name'),\n\n                TextColumn::make('materialGroup.name'),\n\n                TextColumn::make('onlineCategory.name'),\n\n                TextColumn::make('user.name'),\n\n                TextColumn::make('deleted_at')->since(),\n\n                TextColumn::make('quantity'),\n            ])\n            ->filters([])\n            ->headerActions([\n                Tables\\Actions\\CreateAction::make(),\n\n                Tables\\Actions\\AttachAction::make()->form(\n                    fn(Tables\\Actions\\AttachAction $action): array => [\n                        $action->getRecordSelect(),\n\n                        TextInput::make('quantity')\n                            ->required()\n                            ->numeric()\n                            ->step(1)\n                            ->autofocus(),\n                    ]\n                ),\n            ])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n                Tables\\Actions\\DetachAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n\n                    Tables\\Actions\\DetachBulkAction::make(),\n                ]),\n            ]);\n    }\n}\n"
        }
    ]
}