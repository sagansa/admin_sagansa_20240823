{
    "conflicts": [
        {
            "id": "5077ffbd-8281-4365-a37a-78bed6760fd5",
            "currentContent": "<?php\n\nnamespace App\\Http\\Controllers\\api;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\Presence;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass PresenceController extends Controller\n{\n    public function getPresenceToday()\n    {\n        $userId = Auth::user()->id;\n        $today = now()->toDateString();\n        $currentMonth = now()->month;\n\n        $presenceToday = Presence::select('start_date_time', 'end_date_time')\n                                ->where('user_id', $userId)\n                                ->whereDate('created_at', $today)\n                                ->first();\n\n        $presenceThisMonth = Presence::select('start_date_time', 'end_date_time', 'created_at')\n                                ->where('user_id', $userId)\n                                ->whereMonth('created_at', $currentMonth)\n                                ->get()\n                                ->map(function ($attendance) {\n                                    return [\n                                        'start__date_time' => $attendance->start__date_time,\n                                        'end__date_time' => $attendance->end_date_time,\n                                        'date' => $attendance->created_at->toDateString()\n                                    ];\n                                });\n\n        return response()->json([\n            'success' => true,\n            'data' => [\n                'today' => $presenceToday,\n                'this_month' => $presenceThisMonth\n            ],\n            'message' => 'Success get attendance today'\n        ]);\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Presence;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\PresenceResource;\nuse App\\Http\\Resources\\PresenceCollection;\nuse App\\Http\\Requests\\PresenceStoreRequest;\nuse App\\Http\\Requests\\PresenceUpdateRequest;\n\nclass PresenceController extends Controller\n{\n    public function index(Request $request): PresenceCollection\n    {\n        $search = $request->get('search', '');\n\n        $presences = $this->getSearchQuery($search)\n            ->latest()\n            ->paginate();\n\n        return new PresenceCollection($presences);\n    }\n\n    public function store(PresenceStoreRequest $request): PresenceResource\n    {\n        $validated = $request->validated();\n\n        $presence = Presence::create($validated);\n\n        return new PresenceResource($presence);\n    }\n\n    public function show(Request $request, Presence $presence): PresenceResource\n    {\n        return new PresenceResource($presence);\n    }\n\n    public function update(\n        PresenceUpdateRequest $request,\n        Presence $presence\n    ): PresenceResource {\n        $validated = $request->validated();\n\n        $presence->update($validated);\n\n        return new PresenceResource($presence);\n    }\n\n    public function destroy(Request $request, Presence $presence): Response\n    {\n        $presence->delete();\n\n        return response()->noContent();\n    }\n\n    public function getSearchQuery(string $search)\n    {\n        return Presence::query()->where('image_in', 'like', \"%{$search}%\");\n    }\n}\n"
        }
    ]
}