{
    "conflicts": [
        {
            "id": "7bfafac9-f0dc-4fd8-99d2-f353a1fcd972",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Clusters\\Transaction\\Settings;\nuse App\\Filament\\Columns\\ActiveColumn;\nuse App\\Filament\\Forms\\ActiveStatusSelect;\nuse App\\Filament\\Forms\\ImageInput;\nuse App\\Filament\\Forms\\Notes;\nuse Filament\\Tables;\nuse App\\Models\\Product;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Forms\\Components\\DateTimePicker;\nuse Illuminate\\Database\\Eloquent\\SoftDeletingScope;\nuse App\\Filament\\Resources\\Panel\\ProductResource\\Pages;\nuse App\\Models\\MaterialGroup;\nuse App\\Models\\OnlineCategory;\nuse Filament\\Forms\\Set;\nuse Filament\\Tables\\Actions\\ActionGroup;\nuse Filament\\Tables\\Columns\\SelectColumn;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Support\\Str;\n\nclass ProductResource extends Resource\n{\n    protected static ?string $model = Product::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $cluster = Settings::class;\n\n    protected static ?string $navigationGroup = 'Product';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.products.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.products.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.products.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    ImageInput::make('image')\n                        ->directory('images/Product'),\n\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus()\n                        ->live(onBlur: true)\n                        ->afterStateUpdated(fn(Set $set, ?string $state) => $set('slug', Str::slug($state))),\n\n                    Select::make('unit_id')\n                        ->required()\n                        ->relationship('unit', 'unit')\n                        ->preload(),\n\n                    TextInput::make('slug')\n                        ->required()\n                        ->string()\n                        ->unique(Product::class, 'slug', ignoreRecord: true),\n\n                    TextInput::make('sku')\n                        ->label('SKU')\n                        ->nullable()\n                        ->string(),\n\n                    TextInput::make('barcode')\n                        ->nullable()\n                        ->string(),\n\n                    ActiveStatusSelect::make('request')\n                        ->default('2'),\n\n                    ActiveStatusSelect::make('remaining')\n                        ->default('2'),\n\n                    Select::make('payment_type_id')\n                        ->required()\n                        ->relationship('paymentType', 'name')\n                        ->preload(),\n\n                    Select::make('material_group_id')\n                        ->required()\n                        ->relationship('materialGroup', 'name')\n                        ->preload(),\n\n                    Select::make('online_category_id')\n                        ->required()\n                        ->relationship('onlineCategory', 'name')\n                        ->preload(),\n\n                    DateTimePicker::make('deleted_at')\n                        ->rules(['date'])\n                        ->nullable(),\n\n                    Notes::make('description'),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('name')\n                    ->searchable()\n                    ->toggleable(),\n\n                TextColumn::make('unit.unit'),\n\n                ActiveColumn::make('request'),\n\n                ActiveColumn::make('remaining'),\n\n                TextColumn::make('paymentType.name'),\n\n                SelectColumn::make('material_group_id')\n                    ->label('Material Group')\n                    ->options(MaterialGroup::query()->pluck('name', 'id')),\n\n                SelectColumn::make('online_category_id')\n                    ->label('Online Category')\n                    ->options(OnlineCategory::query()->pluck('name', 'id')),\n\n                TextColumn::make('user.name'),\n            ])\n            ->filters([\n\n                SelectFilter::make('material_group_id')\n                    ->multiple()\n                    ->preload()\n                    ->label('Material Group')\n                    ->relationship('materialGroup', 'name'),\n\n                SelectFilter::make('online_category_id')\n                    ->multiple()\n                    ->preload()\n                    ->label('Online Category')\n                    ->relationship('onlineCategory', 'name'),\n\n                SelectFilter::make('remaining')\n                    ->options([\n                        '1' => 'active',\n                        '2' => 'inactive',\n                    ]),\n\n                SelectFilter::make('request')\n                    ->options([\n                        '1' => 'active',\n                        '2' => 'inactive',\n                    ]),\n\n                SelectFilter::make('payment_type_id')\n                    ->label('Payment Type')\n                    ->options([\n                        '1' => 'transfer',\n                        '2' => 'tunai',\n                        '3' => 'non',\n                    ]),\n            ])\n            ->actions([\n                ActionGroup::make([\n                    Tables\\Actions\\EditAction::make(),\n                    // Tables\\Actions\\ViewAction::make(),\n                ])\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n\n                    Tables\\Actions\\ForceDeleteBulkAction::make(),\n                    Tables\\Actions\\RestoreBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('name', 'asc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListProducts::route('/'),\n            'create' => Pages\\CreateProduct::route('/create'),\n            // 'view' => Pages\\ViewProduct::route('/{record}'),\n            'edit' => Pages\\EditProduct::route('/{record}/edit'),\n        ];\n    }\n\n    public static function getEloquentQuery(): Builder\n    {\n        return parent::getEloquentQuery()->withoutGlobalScopes([\n            SoftDeletingScope::class,\n        ]);\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse App\\Models\\Product;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\DateTimePicker;\nuse Illuminate\\Database\\Eloquent\\SoftDeletingScope;\nuse App\\Filament\\Resources\\Panel\\ProductResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\ProductResource\\RelationManagers;\n\nclass ProductResource extends Resource\n{\n    protected static ?string $model = Product::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.products.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.products.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.products.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                    Select::make('unit_id')\n                        ->required()\n                        ->relationship('unit', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('slug')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('sku')\n                        ->nullable()\n                        ->string(),\n\n                    TextInput::make('barcode')\n                        ->nullable()\n                        ->string(),\n\n                    RichEditor::make('description')\n                        ->nullable()\n                        ->string()\n                        ->fileAttachmentsVisibility('public'),\n\n                    FileUpload::make('image')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    TextInput::make('request')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('remaining')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    Select::make('payment_type_id')\n                        ->required()\n                        ->relationship('paymentType', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('material_group_id')\n                        ->required()\n                        ->relationship('materialGroup', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('online_category_id')\n                        ->required()\n                        ->relationship('onlineCategory', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    DateTimePicker::make('deleted_at')\n                        ->rules(['date'])\n                        ->nullable()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('unit.name'),\n\n                TextColumn::make('slug'),\n\n                TextColumn::make('sku'),\n\n                TextColumn::make('barcode'),\n\n                TextColumn::make('description')->limit(255),\n\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('request'),\n\n                TextColumn::make('remaining'),\n\n                TextColumn::make('paymentType.name'),\n\n                TextColumn::make('materialGroup.name'),\n\n                TextColumn::make('onlineCategory.name'),\n\n                TextColumn::make('user.name'),\n\n                TextColumn::make('deleted_at')->since(),\n            ])\n            ->filters([Tables\\Filters\\TrashedFilter::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n\n                    Tables\\Actions\\ForceDeleteBulkAction::make(),\n                    Tables\\Actions\\RestoreBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListProducts::route('/'),\n            'create' => Pages\\CreateProduct::route('/create'),\n            'view' => Pages\\ViewProduct::route('/{record}'),\n            'edit' => Pages\\EditProduct::route('/{record}/edit'),\n        ];\n    }\n\n    public static function getEloquentQuery(): Builder\n    {\n        return parent::getEloquentQuery()->withoutGlobalScopes([\n            SoftDeletingScope::class,\n        ]);\n    }\n}\n"
        }
    ]
}