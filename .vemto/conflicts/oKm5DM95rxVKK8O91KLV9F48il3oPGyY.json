{
    "conflicts": [
        {
            "id": "6354e894-3640-4f54-8c6f-d7210454b85b",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ClosingStoreResource\\RelationManagers;\n\nuse App\\Filament\\Forms\\ImageInput;\nuse App\\Filament\\Forms\\SupplierSelect;\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\ClosingStoreResource;\nuse App\\Filament\\Tables\\FuelServiceTable;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass FuelServicesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'fuelServices';\n\n    protected static ?string $recordTitleAttribute = 'date';\n\n    public function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 1])->schema([\n                SupplierSelect::make('supplier_id'),\n\n                Select::make('vehicle_id')\n                    ->required()\n                    ->relationship('vehicle', 'image')\n                    ->searchable()\n                    ->preload(),\n\n                Select::make('payment_type_id')\n                    ->required()\n                    ->relationship('paymentType', 'name')\n                    ->searchable()\n                    ->preload(),\n\n                ImageInput::make('image')\n\n                    ->directory('images/FuelService'),\n\n                TextInput::make('km')\n                    ->required()\n                    ->numeric()\n                    ->step(1),\n\n                TextInput::make('liter')\n                    ->nullable()\n                    ->numeric()\n                    ->step(1),\n\n                TextInput::make('amount')\n                    ->required()\n                    ->numeric()\n                    ->step(1),\n\n                RichEditor::make('notes')\n                    ->nullable()\n                    ->string()\n                    ->fileAttachmentsVisibility('public'),\n\n                Select::make('created_by_id')\n                    ->required()\n                    ->searchable()\n                    ->preload(),\n\n                Select::make('approved_by_id')\n                    ->required()\n                    ->relationship('createdBy', 'name')\n                    ->searchable()\n                    ->preload(),\n\n                Select::make('fuel_service')\n                    ->required()\n                    ->searchable()\n                    ->preload()\n                    ->options([\n                        '1' => 'fuel',\n                        '2' => 'service',\n                    ]),\n\n                Select::make('status')\n                    ->required()\n                    ->searchable()\n                    ->preload()\n                    ->options([\n                        '1' => 'belum diperiksa',\n                        '2' => 'valid',\n                        '3' => 'perbaiki ',\n                        '4' => 'periksa ulang',\n                    ]),\n            ]),\n        ]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns(\n                FuelServiceTable::schema()\n            )\n            ->filters([])\n            ->headerActions([\n                // Tables\\Actions\\CreateAction::make(),\n\n                // Tables\\Actions\\AttachAction::make()->form(\n                //     fn(Tables\\Actions\\AttachAction $action): array => [\n                //         $action->getRecordSelect(),\n                //     ]\n                // ),\n            ])\n            ->actions([\n                // Tables\\Actions\\EditAction::make(),\n                // Tables\\Actions\\DeleteAction::make(),\n                Tables\\Actions\\DetachAction::make()\n                    ->action(function ($record) {\n                        $record->pivot->delete();\n                        $record->update(['status' => 1]);\n                    }),\n            ])\n            ->bulkActions([\n                // Tables\\Actions\\BulkActionGroup::make([\n                    // Tables\\Actions\\DeleteBulkAction::make(),\n\n                    // Tables\\Actions\\DetachBulkAction::make()\n                    //     ->action(function ($records) {\n                    //             foreach ($records as $record) {\n                    //                 $record->paymentReceipts()->detach();\n                    //                 $record->update(['status' => 1]);\n                    //             }\n                    //         }),\n                // ]),\n            ]);\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ClosingStoreResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\ClosingStoreResource;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass FuelServicesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'fuelServices';\n\n    protected static ?string $recordTitleAttribute = 'date';\n\n    public function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 1])->schema([\n                Select::make('supplier_id')\n                    ->required()\n                    ->relationship('supplier', 'name')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n\n                Select::make('vehicle_id')\n                    ->required()\n                    ->relationship('vehicle', 'image')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n\n                Select::make('payment_type_id')\n                    ->required()\n                    ->relationship('paymentType', 'name')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n\n                FileUpload::make('image')\n                    ->rules(['image'])\n                    ->nullable()\n                    ->maxSize(1024)\n                    ->image()\n                    ->imageEditor()\n                    ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                TextInput::make('km')\n                    ->required()\n                    ->numeric()\n                    ->step(1),\n\n                TextInput::make('liter')\n                    ->nullable()\n                    ->numeric()\n                    ->step(1),\n\n                TextInput::make('amount')\n                    ->required()\n                    ->numeric()\n                    ->step(1),\n\n                RichEditor::make('notes')\n                    ->nullable()\n                    ->string()\n                    ->fileAttachmentsVisibility('public'),\n\n                Select::make('created_by_id')\n                    ->required()\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n\n                Select::make('approved_by_id')\n                    ->required()\n                    ->relationship('createdBy', 'name')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n\n                Select::make('fuel_service')\n                    ->required()\n                    ->searchable()\n                    ->preload()\n                    ->native(false)\n                    ->options([\n                        '1' => 'fuel',\n                        '2' => 'service',\n                    ]),\n\n                Select::make('status')\n                    ->required()\n                    ->searchable()\n                    ->preload()\n                    ->native(false)\n                    ->options([\n                        '1' => 'belum diperiksa',\n                        '2' => 'valid',\n                        '3' => 'perbaiki ',\n                        '4' => 'periksa ulang',\n                    ]),\n            ]),\n        ]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                TextColumn::make('supplier.name'),\n\n                TextColumn::make('vehicle.image'),\n\n                TextColumn::make('paymentType.name'),\n\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('km'),\n\n                TextColumn::make('liter'),\n\n                TextColumn::make('amount'),\n\n                TextColumn::make('notes')->limit(255),\n\n                TextColumn::make('created_by_id'),\n\n                TextColumn::make('createdBy.name'),\n\n                TextColumn::make('fuel_service'),\n\n                TextColumn::make('status'),\n            ])\n            ->filters([])\n            ->headerActions([\n                Tables\\Actions\\CreateAction::make(),\n\n                Tables\\Actions\\AttachAction::make()->form(\n                    fn(Tables\\Actions\\AttachAction $action): array => [\n                        $action->getRecordSelect(),\n                    ]\n                ),\n            ])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n                Tables\\Actions\\DetachAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n\n                    Tables\\Actions\\DetachBulkAction::make(),\n                ]),\n            ]);\n    }\n}\n"
        }
    ]
}