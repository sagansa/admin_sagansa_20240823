{
    "conflicts": [
        {
            "id": "5b280b6b-5c11-4260-baea-29228c9d12da",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Clusters\\Asset;\nuse App\\Filament\\Clusters\\Movements;\nuse App\\Filament\\Forms\\ImageInput;\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse App\\Models\\MovementAssetAudit;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse App\\Filament\\Resources\\Panel\\MovementAssetAuditResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\MovementAssetAuditResource\\RelationManagers;\n\nclass MovementAssetAuditResource extends Resource\n{\n    protected static ?string $model = MovementAssetAudit::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $cluster = Asset::class;\n\n    protected static ?string $navigationGroup = 'Movement';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.movementAssetAudits.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.movementAssetAudits.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.movementAssetAudits.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    ImageInput::make('image')\n\n                        ->directory('images/MovementAssetAudit'),\n\n                    Select::make('movement_asset_id')\n                        ->required()\n                        ->relationship('movementAsset', 'image')\n                        ->searchable()\n                        ->preload(),\n\n                    TextInput::make('good_cond_qty')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('bad_cond_qty')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    Select::make('movement_asset_result_id')\n                        ->required()\n                        ->relationship('movementAssetResult', 'date')\n                        ->searchable()\n                        ->preload(),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('movementAsset.image'),\n\n                TextColumn::make('good_cond_qty'),\n\n                TextColumn::make('bad_cond_qty'),\n\n                TextColumn::make('movementAssetResult.date'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListMovementAssetAudits::route('/'),\n            'create' => Pages\\CreateMovementAssetAudit::route('/create'),\n            'view' => Pages\\ViewMovementAssetAudit::route('/{record}'),\n            'edit' => Pages\\EditMovementAssetAudit::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse App\\Models\\MovementAssetAudit;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\FileUpload;\nuse App\\Filament\\Resources\\Panel\\MovementAssetAuditResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\MovementAssetAuditResource\\RelationManagers;\n\nclass MovementAssetAuditResource extends Resource\n{\n    protected static ?string $model = MovementAssetAudit::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Setting';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.movementAssetAudits.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.movementAssetAudits.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.movementAssetAudits.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    FileUpload::make('image')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    Select::make('movement_asset_id')\n                        ->required()\n                        ->relationship('movementAsset', 'image')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('good_cond_qty')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('bad_cond_qty')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    Select::make('movement_asset_result_id')\n                        ->required()\n                        ->relationship('movementAssetResult', 'date')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('movementAsset.image'),\n\n                TextColumn::make('good_cond_qty'),\n\n                TextColumn::make('bad_cond_qty'),\n\n                TextColumn::make('movementAssetResult.date'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListMovementAssetAudits::route('/'),\n            'create' => Pages\\CreateMovementAssetAudit::route('/create'),\n            'view' => Pages\\ViewMovementAssetAudit::route('/{record}'),\n            'edit' => Pages\\EditMovementAssetAudit::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}