{
    "conflicts": [
        {
            "id": "1ba378ac-eab0-4387-9cfd-c2e4d27df087",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Clusters\\Closings;\nuse App\\Filament\\Columns\\CurrencyColumn;\nuse App\\Filament\\Columns\\StatusColumn;\nuse App\\Filament\\Forms\\ImageInput;\nuse App\\Filament\\Forms\\Notes;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\ClosingCourier;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\ClosingCourierResource\\Pages;\nuse App\\Models\\ClosingStore;\nuse Filament\\Tables\\Actions\\ActionGroup;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass ClosingCourierResource extends Resource\n{\n    protected static ?string $model = ClosingCourier::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 2;\n\n    protected static ?string $navigationGroup = 'Closing';\n\n    protected static ?string $pluralLabel = 'Courier';\n\n    protected static ?string $cluster = Closings::class;\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.closingCouriers.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.closingCouriers.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.closingCouriers.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    ImageInput::make('image')\n                        ->disk('public')\n                        ->directory('images/ClosingCourier'),\n\n                    Select::make('bank_id')\n                        ->required()\n                        ->relationship('bank', 'name')\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('total_cash_to_transfer')\n                        ->label('Total Cash to Transfer')\n                        ->required()\n                        ->numeric()\n                        ->prefix('Rp'),\n                ]),\n            ]),\n\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Select::make('closingStores')\n                        ->multiple()\n                        ->relationship(\n                            name: 'closingStores',\n                            modifyQueryUsing: fn (Builder $query, $get) => $query\n                                ->where('transfer_by_id', Auth::id())\n                                // ->where('status', '1')\n                                // ->when($get('store_id'), fn ($query, $storeId) => $query->where('store_id', $storeId)) // Menggunakan store_id yang dipilih\n                        )\n                        ->getOptionLabelFromRecordUsing(fn (ClosingStore $record) => \"{$record->closing_store_name}\")\n                        ->preload()\n                        ->reactive()\n                        ->native(false),\n                        // ->afterStateUpdated(function ($state, $set) {\n                        //     $totalAmount = 0;\n                        //     foreach ($state as $fuelServiceId) {\n                        //         $fuelService = ClosingStore::find($fuelServiceId);\n                        //         if ($fuelService) {\n                        //             $fuelService->status = 2;\n                        //             $fuelService->save();\n                        //             $totalAmount += $fuelService->amount;\n                        //         }\n                        //     }\n                        //     $set('total_amount', $totalAmount);\n                        // }),\n                ])\n            ]),\n\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Select::make('status')\n                    ->required()\n                    ->required(fn () => Auth::user()->hasRole('admin'))\n                    ->hidden(fn ($operation) => $operation === 'create')\n                    ->disabled(fn () => Auth::user()->hasRole('staff'))\n                    ->preload()\n                    ->native(false)\n                    ->options([\n                        '1' => 'belum diperiksa',\n                        '2' => 'valid',\n                        '3' => 'diperbaiki',\n                        '4' => 'periksa ulang',\n                    ]),\n\n                    Notes::make('notes'),\n                ])\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        $query = ClosingCourier::query();\n\n        if (!Auth::user()->hasRole('admin')) {\n            $query->where('created_by_id', Auth::id());\n        }\n\n        return $table\n            ->query($query)\n            ->poll('60s')\n            ->columns([\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('created_at'),\n\n                TextColumn::make('bank.name'),\n\n                CurrencyColumn::make('total_cash_to_transfer'),\n\n                TextColumn::make('createdBy.name'),\n\n                StatusColumn::make('status'),\n            ])\n            ->filters([])\n            ->actions([\n                ActionGroup::make([\n                    Tables\\Actions\\EditAction::make(),\n                    Tables\\Actions\\ViewAction::make(),\n                ])\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('created_at', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [\n            //\n        ];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListClosingCouriers::route('/'),\n            'create' => Pages\\CreateClosingCourier::route('/create'),\n            'view' => Pages\\ViewClosingCourier::route('/{record}'),\n            'edit' => Pages\\EditClosingCourier::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\ClosingCourier;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\ClosingCourierResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\ClosingCourierResource\\RelationManagers;\n\nclass ClosingCourierResource extends Resource\n{\n    protected static ?string $model = ClosingCourier::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Cash';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.closingCouriers.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.closingCouriers.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.closingCouriers.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    FileUpload::make('image')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    Select::make('bank_id')\n                        ->required()\n                        ->relationship('bank', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('total_cash_to_transfer')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    Select::make('created_by_id')\n                        ->nullable()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('approved_by_id')\n                        ->required()\n                        ->relationship('createdBy', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            '1' => 'belum diperiksa',\n                            '2' => 'valid',\n                            '3' => 'diperbaiki',\n                            '4' => 'periksa ulang',\n                        ]),\n\n                    RichEditor::make('notes')\n                        ->nullable()\n                        ->fileAttachmentsVisibility('public'),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('bank.name'),\n\n                TextColumn::make('total_cash_to_transfer'),\n\n                TextColumn::make('created_by_id'),\n\n                TextColumn::make('createdBy.name'),\n\n                TextColumn::make('status'),\n\n                TextColumn::make('notes')->limit(255),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListClosingCouriers::route('/'),\n            'create' => Pages\\CreateClosingCourier::route('/create'),\n            'view' => Pages\\ViewClosingCourier::route('/{record}'),\n            'edit' => Pages\\EditClosingCourier::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}