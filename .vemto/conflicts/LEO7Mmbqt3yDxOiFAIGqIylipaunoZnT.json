{
    "conflicts": [
        {
            "id": "83d57eed-1ec4-44da-a75c-5d3b9219f17a",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Columns\\CurrencyColumn;\nuse App\\Filament\\Columns\\PaymentStatusColumn;\nuse App\\Filament\\Forms\\DateInput;\nuse App\\Filament\\Forms\\ImageInput;\nuse App\\Filament\\Forms\\Notes;\nuse App\\Filament\\Forms\\PaymentStatusSelectInput;\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\FuelService;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\FuelServiceResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\FuelServiceResource\\RelationManagers;\nuse App\\Models\\PaymentType;\nuse App\\Models\\Supplier;\nuse App\\Models\\Vehicle;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Filament\\Forms\\Components\\Radio;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass FuelServiceResource extends Resource\n{\n    protected static ?string $model = FuelService::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 2;\n\n    protected static ?string $navigationGroup = 'Purchase';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.fuelServices.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.fuelServices.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.fuelServices.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n\n                    ImageInput::make('image'),\n\n                    DateInput::make('date')\n                        ->required(),\n\n                    Radio::make('fuel_service')\n                        ->inline()\n                        ->hiddenLabel()\n                        ->required()\n                        ->options([\n                            '1' => 'fuel',\n                            '2' => 'service',\n                        ]),\n\n                    Select::make('vehicle_id')\n                        ->required()\n                        ->placeholder('Vehicle')\n                        ->hiddenLabel()\n                        ->relationship(\n                            name: 'vehicle',\n                            modifyQueryUsing: fn (Builder $query) => $query->where('status', '1'),\n                        )\n                        ->getOptionLabelFromRecordUsing(fn (Vehicle $record) => \"{$record->no_register}\")\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('supplier_id')\n                        ->required()\n                        ->placeholder('Supplier')\n                        ->hiddenLabel()\n                        ->relationship(\n                            name: 'supplier',\n                            modifyQueryUsing: fn (Builder $query) => $query->where('status','<>', '3'),\n                        )\n                        ->getOptionLabelFromRecordUsing(fn (Supplier $record) => \"{$record->supplier_name}\")\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('payment_type_id')\n                        ->required()\n                        ->placeholder('Payment Type')\n                        ->hiddenLabel()\n                        ->relationship(\n                            name: 'paymentType',\n                            modifyQueryUsing: fn (Builder $query) => $query->where('status', '1'),\n                        )\n                        ->getOptionLabelFromRecordUsing(fn (PaymentType $record) => \"{$record->name}\")\n                        // ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('km')\n                        ->placeholder('km')\n                        ->hiddenLabel()\n                        ->suffix('km')\n                        ->required()\n                        ->numeric(),\n\n                    TextInput::make('liter')\n                        ->placeholder('liter')\n                        ->hiddenLabel()\n                        ->suffix('liter')\n                        ->nullable()\n                        ->numeric(),\n\n                    TextInput::make('amount')\n                        ->required()\n                        ->placeholder('Amount')\n                        ->hiddenLabel()\n                        ->numeric()\n                        ->prefix('Rp'),\n\n                    PaymentStatusSelectInput::make('status'),\n\n                    Notes::make('notes'),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        $query = FuelService::query();\n\n        if(Auth::user()->hasRole('staff')) {\n            $query->where('created_by_id', Auth::id());\n        }\n\n        return $table\n            ->query($query)\n            ->poll('60s')\n            ->columns([\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('fuel_service')\n                    ->formatStateUsing(\n                        fn(string $state): string => match ($state) {\n                            '1' => 'fuel',\n                            '2' => 'service',\n                        }),\n\n                TextColumn::make('supplier.name'),\n\n                TextColumn::make('date'),\n\n                TextColumn::make('vehicle.no_register'),\n\n                TextColumn::make('paymentType.name'),\n\n                TextColumn::make('km')->numeric(thousandsSeparator: '.')->label('km'),\n\n                TextColumn::make('liter'),\n\n                CurrencyColumn::make('amount'),\n\n                TextColumn::make('createdBy.name'),\n\n                PaymentStatusColumn::make('status'),\n\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('date', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListFuelServices::route('/'),\n            'create' => Pages\\CreateFuelService::route('/create'),\n            'view' => Pages\\ViewFuelService::route('/{record}'),\n            'edit' => Pages\\EditFuelService::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\FuelService;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\FuelServiceResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\FuelServiceResource\\RelationManagers;\n\nclass FuelServiceResource extends Resource\n{\n    protected static ?string $model = FuelService::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.fuelServices.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.fuelServices.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.fuelServices.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Select::make('supplier_id')\n                        ->required()\n                        ->relationship('supplier', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('vehicle_id')\n                        ->required()\n                        ->relationship('vehicle', 'image')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('payment_type_id')\n                        ->required()\n                        ->relationship('paymentType', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    FileUpload::make('image')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    TextInput::make('km')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('liter')\n                        ->nullable()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('amount')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    RichEditor::make('notes')\n                        ->nullable()\n                        ->string()\n                        ->fileAttachmentsVisibility('public'),\n\n                    Select::make('created_by_id')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('approved_by_id')\n                        ->required()\n                        ->relationship('createdBy', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('fuel_service')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            '1' => 'fuel',\n                            '2' => 'service',\n                        ]),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            '1' => 'belum diperiksa',\n                            '2' => 'valid',\n                            '3' => 'perbaiki ',\n                            '4' => 'periksa ulang',\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('supplier.name'),\n\n                TextColumn::make('vehicle.image'),\n\n                TextColumn::make('paymentType.name'),\n\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('km'),\n\n                TextColumn::make('liter'),\n\n                TextColumn::make('amount'),\n\n                TextColumn::make('notes')->limit(255),\n\n                TextColumn::make('created_by_id'),\n\n                TextColumn::make('createdBy.name'),\n\n                TextColumn::make('fuel_service'),\n\n                TextColumn::make('status'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListFuelServices::route('/'),\n            'create' => Pages\\CreateFuelService::route('/create'),\n            'view' => Pages\\ViewFuelService::route('/{record}'),\n            'edit' => Pages\\EditFuelService::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}