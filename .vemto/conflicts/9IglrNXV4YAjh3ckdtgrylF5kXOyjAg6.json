{
    "conflicts": [
        {
            "id": "ddbad052-bf6a-47d0-b0ff-85aae4edd7fc",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Clusters\\Asset;\nuse App\\Filament\\Clusters\\Vehicles;\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse App\\Models\\VehicleCertificate;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\VehicleCertificateResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\VehicleCertificateResource\\RelationManagers;\n\nclass VehicleCertificateResource extends Resource\n{\n    protected static ?string $model = VehicleCertificate::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $cluster = Asset::class;\n\n    protected static ?string $navigationGroup = 'Vehicle';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.vehicleCertificates.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.vehicleCertificates.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.vehicleCertificates.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Select::make('vehicle_id')\n                        ->required()\n                        ->relationship('vehicle', 'image')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('bpkb')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('stnk')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('name')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('brand')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('type')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('category')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('model')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('manufacture_year')->required(),\n\n                    TextInput::make('cylinder_capacity')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('vehicle_identity_no')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('engine_no')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('color')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('type_fuel')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('lisence_plate_color')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('registration_year')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('bpkb_no')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('location_code')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('registration_queue_no')\n                        ->required()\n                        ->string(),\n\n                    RichEditor::make('notes')\n                        ->nullable()\n                        ->string()\n                        ->fileAttachmentsVisibility('public'),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('vehicle.image'),\n\n                TextColumn::make('bpkb'),\n\n                TextColumn::make('stnk'),\n\n                TextColumn::make('name'),\n\n                TextColumn::make('brand'),\n\n                TextColumn::make('type'),\n\n                TextColumn::make('category'),\n\n                TextColumn::make('model'),\n\n                TextColumn::make('manufacture_year'),\n\n                TextColumn::make('cylinder_capacity'),\n\n                TextColumn::make('vehicle_identity_no'),\n\n                TextColumn::make('engine_no'),\n\n                TextColumn::make('color'),\n\n                TextColumn::make('type_fuel'),\n\n                TextColumn::make('lisence_plate_color'),\n\n                TextColumn::make('registration_year'),\n\n                TextColumn::make('bpkb_no'),\n\n                TextColumn::make('location_code'),\n\n                TextColumn::make('registration_queue_no'),\n\n                TextColumn::make('notes')->limit(255),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListVehicleCertificates::route('/'),\n            'create' => Pages\\CreateVehicleCertificate::route('/create'),\n            'view' => Pages\\ViewVehicleCertificate::route('/{record}'),\n            'edit' => Pages\\EditVehicleCertificate::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse App\\Models\\VehicleCertificate;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\VehicleCertificateResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\VehicleCertificateResource\\RelationManagers;\n\nclass VehicleCertificateResource extends Resource\n{\n    protected static ?string $model = VehicleCertificate::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Setting';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.vehicleCertificates.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.vehicleCertificates.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.vehicleCertificates.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Select::make('vehicle_id')\n                        ->required()\n                        ->relationship('vehicle', 'image')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('bpkb')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('stnk')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('name')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('brand')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('type')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('category')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('model')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('manufacture_year')->required(),\n\n                    TextInput::make('cylinder_capacity')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('vehicle_identity_no')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('engine_no')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('color')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('type_fuel')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('lisence_plate_color')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('registration_year')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('bpkb_no')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('location_code')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('registration_queue_no')\n                        ->required()\n                        ->string(),\n\n                    RichEditor::make('notes')\n                        ->nullable()\n                        ->string()\n                        ->fileAttachmentsVisibility('public'),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('vehicle.image'),\n\n                TextColumn::make('bpkb'),\n\n                TextColumn::make('stnk'),\n\n                TextColumn::make('name'),\n\n                TextColumn::make('brand'),\n\n                TextColumn::make('type'),\n\n                TextColumn::make('category'),\n\n                TextColumn::make('model'),\n\n                TextColumn::make('manufacture_year'),\n\n                TextColumn::make('cylinder_capacity'),\n\n                TextColumn::make('vehicle_identity_no'),\n\n                TextColumn::make('engine_no'),\n\n                TextColumn::make('color'),\n\n                TextColumn::make('type_fuel'),\n\n                TextColumn::make('lisence_plate_color'),\n\n                TextColumn::make('registration_year'),\n\n                TextColumn::make('bpkb_no'),\n\n                TextColumn::make('location_code'),\n\n                TextColumn::make('registration_queue_no'),\n\n                TextColumn::make('notes')->limit(255),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListVehicleCertificates::route('/'),\n            'create' => Pages\\CreateVehicleCertificate::route('/create'),\n            'view' => Pages\\ViewVehicleCertificate::route('/{record}'),\n            'edit' => Pages\\EditVehicleCertificate::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}