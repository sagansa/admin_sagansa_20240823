{
    "conflicts": [
        {
            "id": "3d688672-aa0c-43e5-a41a-22ce422577d1",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Columns\\StatusColumn;\nuse App\\Filament\\Forms\\BaseSelectInput;\nuse App\\Filament\\Forms\\DateInput;\nuse App\\Filament\\Forms\\StatusSelect;\nuse App\\Filament\\Forms\\StatusSelectInput;\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\RemainingStock;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse App\\Filament\\Resources\\Panel\\RemainingStockResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\RemainingStockResource\\RelationManagers;\nuse App\\Models\\Product;\nuse Filament\\Forms\\Components\\Repeater;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass RemainingStockResource extends Resource\n{\n    protected static ?string $model = RemainingStock::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Stock';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.remainingStocks.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.remainingStocks.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.remainingStocks.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    DateInput::make('date')\n                        ->placeholder(__('Date')),\n\n                    BaseSelectInput::make('store_id')\n                        ->required()\n                        ->placeholder('Store')\n                        ->relationship('store', 'nickname'),\n\n                    StatusSelectInput::make('status')\n                        ->placeholder('Status'),\n                ]),\n            ]),\n\n            Section::make('Stock Product')->schema([\n                Grid::make(['default' => 1])->schema([\n                    self::getProductsRepeater()\n                ]),\n            ])->hidden(fn ($operation) => $operation === 'edit' || $operation === 'view'),\n\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        $remainingStocks = RemainingStock::query();\n\n        if (Auth::user()->hasRole('staff')) {\n            $remainingStocks = $remainingStocks->where('created_by_id', Auth::id());\n        }\n\n        return $table\n            ->poll('60s')\n            ->query($remainingStocks)\n            ->columns([\n                TextColumn::make('date'),\n\n                TextColumn::make('store.nickname'),\n\n                TextColumn::make('createdBy.name')\n                    ->hidden(fn () => !Auth::user()->hasRole('admin')),\n\n                StatusColumn::make('status'),\n\n                TextColumn::make('productRemainingStocks', 'Product Remaining Stocks')\n                    ->label('Stocks')\n                    ->html()\n                    ->formatStateUsing(function (RemainingStock $record) {\n                        return implode('<br>', $record->productRemainingStocks->map(function ($productRemainingStock) {\n                            return \"{$productRemainingStock->product->name} = {$productRemainingStock->quantity} {$productRemainingStock->product->unit->unit}\";\n                        })->toArray());\n                    })\n                    ->extraAttributes(['class' => 'whitespace-pre-wrap']),\n\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [\n            //\n            RelationManagers\\ProductsRelationManager::class,\n        ];\n    }\n\n    public static function getCreateButtonLabel(): string\n    {\n        return __('Create'); // Mengubah teks tombol menjadi \"Create\"\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListRemainingStocks::route('/'),\n            'create' => Pages\\CreateRemainingStock::route('/create'),\n            'view' => Pages\\ViewRemainingStock::route('/{record}'),\n            'edit' => Pages\\EditRemainingStock::route('/{record}/edit'),\n        ];\n    }\n\n    public static function getProductsRepeater(): Repeater\n    {\n        $products = Product::where('remaining', '1')->get()->map(function ($item) {\n            return [\n                'product_id' => $item->id,\n                'quantity' => $item->quantity,\n            ];\n        })->toArray();\n\n        return Repeater::make('productRemainingStocks')\n            // ->label(__('crud.remainingStocks.products'))\n\n            ->hiddenLabel()\n            ->default($products)\n            ->relationship()\n            ->addable(false)\n            ->deletable(false)\n            ->schema([\n                Select::make('product_id')\n                    ->label('Product')\n                    ->disableOptionsWhenSelectedInSiblingRepeaterItems()\n                    ->required()\n                    ->native(false)\n                    ->options(Product::where('remaining', '1')->get()->pluck('name','id')),\n                TextInput::make('quantity')\n                    ->required()\n                    ->suffix(function ($get) {\n                        $product = Product::find($get('product_id'));\n                        return $product ? $product->unit->unit : '';\n                    }),\n            ]);\n\n\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\RemainingStock;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\RemainingStockResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\RemainingStockResource\\RelationManagers;\n\nclass RemainingStockResource extends Resource\n{\n    protected static ?string $model = RemainingStock::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.remainingStocks.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.remainingStocks.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.remainingStocks.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    DatePicker::make('date')\n                        ->rules(['date'])\n                        ->required()\n                        ->native(false),\n\n                    Select::make('store_id')\n                        ->required()\n                        ->relationship('store', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    RichEditor::make('notes')\n                        ->nullable()\n                        ->string()\n                        ->fileAttachmentsVisibility('public'),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('date')->since(),\n\n                TextColumn::make('store.name'),\n\n                TextColumn::make('notes')->limit(255),\n\n                TextColumn::make('created_by_id'),\n\n                TextColumn::make('createdBy.name'),\n\n                TextColumn::make('status'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [RelationManagers\\ProductsRelationManager::class];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListRemainingStocks::route('/'),\n            'create' => Pages\\CreateRemainingStock::route('/create'),\n            'view' => Pages\\ViewRemainingStock::route('/{record}'),\n            'edit' => Pages\\EditRemainingStock::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}