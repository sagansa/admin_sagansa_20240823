{
    "conflicts": [
        {
            "id": "c9fab2de-6b9a-4783-90ac-8129d0245b05",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\InvoicePurchaseResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\nuse App\\Filament\\Resources\\Panel\\InvoicePurchaseResource;\nuse App\\Models\\DetailInvoice;\nuse App\\Models\\DetailRequest;\nuse App\\Models\\InvoicePurchase;\nuse Filament\\Forms\\Components\\Component;\n\nclass DetailInvoicesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'detailInvoices';\n\n    protected static ?string $recordTitleAttribute = 'created_at';\n\n    public function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 1])->schema([\n                Select::make('detailRequest')\n                    ->label('Detail Request')\n                    ->relationship(\n                        name: 'detailRequest',\n                        modifyQueryUsing: function (Builder $query, $get) {\n                    //         // Mengambil nilai 'store_id' dan 'payment_type_id' dari 'invoicePurchase'\n\n                    //         // $storeId = InvoicePurchase::get('store_id');\n                    //         // $paymentTypeId = InvoicePurchase::get('payment_type_id');\n\n                    //         // $query->where('payment_type_id', $paymentTypeId);\n\n                            // dd($query);\n                            return $query;\n                        }\n                    )\n                    ->getOptionLabelFromRecordUsing(fn (DetailRequest $record) => \"{$record->detail_request_name}\")\n                    ->required()\n                    ->disableOptionsWhenSelectedInSiblingRepeaterItems()\n                    ->columnSpan(['md' => 4]),\n\n                TextInput::make('quantity_product')\n                    ->required()\n                    ->numeric()\n                    ->step(1),\n\n                // TextInput::make('quantity_invoice')\n                //     ->nullable()\n                //     ->numeric()\n                //     ->step(1),\n\n                // Select::make('unit_id')\n                //     ->nullable()\n                //     ->relationship('unit', 'name')\n                //     ->searchable()\n                //     ->preload(),\n\n                TextInput::make('subtotal_invoice')\n                    ->prefix('Rp ')\n                    ->required()\n                    ->numeric()\n                    ->step(1),\n\n                // TextInput::make('status')\n                //     ->required()\n                //     ->numeric()\n                //     ->step(1),\n            ]),\n        ]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                TextColumn::make('detailRequest.notes'),\n\n                TextColumn::make('quantity_product'),\n\n                TextColumn::make('subtotal_invoice'),\n\n            ])\n            ->filters([])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ]);\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\InvoicePurchaseResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\nuse App\\Filament\\Resources\\Panel\\InvoicePurchaseResource;\n\nclass DetailInvoicesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'detailInvoices';\n\n    protected static ?string $recordTitleAttribute = 'created_at';\n\n    public function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 1])->schema([\n                Select::make('detail_request_id')\n                    ->required()\n                    ->relationship('detailRequest', 'notes')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n\n                TextInput::make('quantity_product')\n                    ->required()\n                    ->numeric()\n                    ->step(1),\n\n                TextInput::make('quantity_invoice')\n                    ->nullable()\n                    ->numeric()\n                    ->step(1),\n\n                Select::make('unit_id')\n                    ->nullable()\n                    ->relationship('unit', 'name')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n\n                TextInput::make('status')\n                    ->required()\n                    ->numeric()\n                    ->step(1),\n            ]),\n        ]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                TextColumn::make('detailRequest.notes'),\n\n                TextColumn::make('quantity_product'),\n\n                TextColumn::make('quantity_invoice'),\n\n                TextColumn::make('unit.name'),\n\n                TextColumn::make('status'),\n            ])\n            ->filters([])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ]);\n    }\n}\n"
        }
    ]
}