{
    "conflicts": [
        {
            "id": "f5a369ea-b8dd-4692-a5ac-95c77a94778f",
            "currentContent": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Production;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass ProductionPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->can('view_any_panel::production');\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Production $production): bool\n    {\n        return $user->can('view_panel::production');\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->can('create_panel::production');\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Production $production): bool\n    {\n        return $user->can('update_panel::production');\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Production $production): bool\n    {\n        return $user->can('delete_panel::production');\n    }\n\n    /**\n     * Determine whether the user can bulk delete.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->can('delete_any_panel::production');\n    }\n\n    /**\n     * Determine whether the user can permanently delete.\n     */\n    public function forceDelete(User $user, Production $production): bool\n    {\n        return $user->can('force_delete_panel::production');\n    }\n\n    /**\n     * Determine whether the user can permanently bulk delete.\n     */\n    public function forceDeleteAny(User $user): bool\n    {\n        return $user->can('force_delete_any_panel::production');\n    }\n\n    /**\n     * Determine whether the user can restore.\n     */\n    public function restore(User $user, Production $production): bool\n    {\n        return $user->can('restore_panel::production');\n    }\n\n    /**\n     * Determine whether the user can bulk restore.\n     */\n    public function restoreAny(User $user): bool\n    {\n        return $user->can('restore_any_panel::production');\n    }\n\n    /**\n     * Determine whether the user can replicate.\n     */\n    public function replicate(User $user, Production $production): bool\n    {\n        return $user->can('replicate_panel::production');\n    }\n\n    /**\n     * Determine whether the user can reorder.\n     */\n    public function reorder(User $user): bool\n    {\n        return $user->can('reorder_panel::production');\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Production;\n\nclass ProductionPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Production $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Production $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Production $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Production $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Production $model): bool\n    {\n        return true;\n    }\n}\n"
        }
    ]
}