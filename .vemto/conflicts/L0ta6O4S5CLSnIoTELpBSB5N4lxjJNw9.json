{
    "conflicts": [
        {
            "id": "04cdd2b3-2292-444e-8eca-a6e43d520280",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Clusters\\Advances;\nuse App\\Filament\\Columns\\CurrencyColumn;\nuse App\\Filament\\Columns\\StatusColumn;\nuse App\\Filament\\Forms\\DateInput;\nuse App\\Filament\\Forms\\ImageInput;\nuse App\\Filament\\Forms\\Notes;\nuse App\\Filament\\Forms\\StatusSelectInput;\nuse App\\Filament\\Forms\\StatusSelectLabel;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\CashAdvance;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\CashAdvanceResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\CashAdvanceResource\\RelationManagers;\nuse App\\Models\\AdvancePurchase;\nuse Filament\\Forms\\Components\\Group;\nuse Filament\\Forms\\Get;\nuse Filament\\Forms\\Set;\n\nclass CashAdvanceResource extends Resource\n{\n    protected static ?string $model = CashAdvance::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-banknotes';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $cluster = Advances::class;\n\n    // protected static ?string $navigationGroup = 'Purchases';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.cashAdvances.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.cashAdvances.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.cashAdvances.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()\n                ->schema(static::getDetailsFormHeadSchema()),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('date'),\n\n                CurrencyColumn::make('transfer'),\n\n                CurrencyColumn::make('before'),\n\n\n                CurrencyColumn::make('purchase'),\n\n                CurrencyColumn::make('remains'),\n\n                TextColumn::make('user.name'),\n\n                StatusColumn::make('status'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('date', 'desc');\n    }\n\n    public static function getDetailsFormHeadSchema(): array\n    {\n        return [\n            Grid::make(['default' => 1])->schema([\n                ImageInput::make('image'),\n\n                Group::make()->schema([\n                    Select::make('user_id')\n                        ->label('User')\n                        ->required()\n                        ->relationship('user', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->columnSpan([\n                            'md' => 4,\n                        ]),\n\n                    DatePicker::make('date')\n                        ->columnSpan([\n                            'md' => 4,\n                        ]),\n\n                    StatusSelectLabel::make('status')\n                        ->label('Status')\n                        ->columnSpan([\n                            'md' => 4,\n                        ]),\n\n                    TextInput::make('transfer')\n                        ->required()\n                        ->label('Transfer')\n                        ->default(0)\n                        ->minValue(0)\n                        ->numeric()\n                        ->debounce(500)\n                        ->prefix('Rp')\n                        ->reactive()\n                        ->afterStateUpdated(function (Set $set, Get $get) {\n                            self::updatePurchase($get, $set);\n                        })\n                        ->columnSpan([\n                            'md' => 3,\n                        ]),\n\n                    TextInput::make('before')\n                        ->required()\n                        ->label('Before')\n                        ->default(0)\n                        ->minValue(0)\n                        ->numeric()\n                        ->debounce(500)\n                        ->prefix('Rp')\n                        ->reactive()\n                        ->afterStateUpdated(function (Set $set, Get $get) {\n                            self::updatePurchase($get, $set);\n                        })\n                        ->columnSpan([\n                            'md' => 3,\n                        ]),\n\n                     TextInput::make('purchase')\n                        ->readOnly()\n                        ->label('Purchase')\n                        ->numeric()\n                        ->prefix('Rp')\n                        ->columnSpan([\n                            'md' => 3,\n                        ]),\n\n                    TextInput::make('remains')\n                        ->readOnly()\n                        ->label('Remains')\n                        ->numeric()\n                        ->prefix('Rp')\n                        ->columnSpan([\n                            'md' => 3,\n                        ]),\n\n                    ])->columns([\n                        'md' => 12,\n                ]),\n\n                Notes::make('notes'),\n\n            ]),\n        ];\n    }\n\n    public static function getRelations(): array\n    {\n        return [RelationManagers\\AdvancePurchasesRelationManager::class];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListCashAdvances::route('/'),\n            'create' => Pages\\CreateCashAdvance::route('/create'),\n            'view' => Pages\\ViewCashAdvance::route('/{record}'),\n            'edit' => Pages\\EditCashAdvance::route('/{record}/edit'),\n        ];\n    }\n\n    protected static function updatePurchase(Get $get, Set $set): void\n    {\n        $selectedAdvancePurchases = collect($get('advancePurchases'))->filter(fn($advancePurchase) => !empty($advancePurchase['advance_purchase_id']));\n\n        $totalPrices = AdvancePurchase::whereIn('id', $selectedAdvancePurchases->pluck('advance_purchase_id'))->pluck('total_price', 'id');\n        $purchase = $selectedAdvancePurchases->reduce(function ($purchase, $advancePurchase) use ($totalPrices) {\n            return $purchase + ($totalPrices[$advancePurchase['advance_purchase_id']] ?? 0);\n        }, 0);\n\n        $set('purchase', $purchase);\n\n        $transfer = $get('transfer') !== null ? (int) $get('transfer') : 0;\n        $before = $get('before') !== null ? (int) $get('before') : 0;\n        $remains = $transfer + $before - $purchase;\n\n        $set('remains', $remains);\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\CashAdvance;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\CashAdvanceResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\CashAdvanceResource\\RelationManagers;\n\nclass CashAdvanceResource extends Resource\n{\n    protected static ?string $model = CashAdvance::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.cashAdvances.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.cashAdvances.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.cashAdvances.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    FileUpload::make('image')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    DatePicker::make('date')\n                        ->rules(['date'])\n                        ->required()\n                        ->native(false),\n\n                    TextInput::make('transfer')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    Select::make('user_id')\n                        ->required()\n                        ->relationship('user', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('before')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('purchase')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('remains')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    RichEditor::make('notes')\n                        ->nullable()\n                        ->string()\n                        ->fileAttachmentsVisibility('public'),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('date')->since(),\n\n                TextColumn::make('transfer'),\n\n                TextColumn::make('user.name'),\n\n                TextColumn::make('before'),\n\n                TextColumn::make('purchase'),\n\n                TextColumn::make('remains'),\n\n                TextColumn::make('status'),\n\n                TextColumn::make('notes')->limit(255),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListCashAdvances::route('/'),\n            'create' => Pages\\CreateCashAdvance::route('/create'),\n            'view' => Pages\\ViewCashAdvance::route('/{record}'),\n            'edit' => Pages\\EditCashAdvance::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}