{
    "conflicts": [
        {
            "id": "556e0cc6-37e4-4b1d-a087-fa0426717713",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Clusters\\Purchases;\nuse App\\Filament\\Forms\\BaseSelect;\nuse App\\Filament\\Forms\\CurrencyInput;\nuse App\\Filament\\Forms\\DateInput;\nuse App\\Filament\\Forms\\DecimalInput;\nuse App\\Filament\\Forms\\ImageInput;\nuse App\\Filament\\Forms\\NominalInput;\nuse App\\Filament\\Forms\\Notes;\nuse App\\Filament\\Forms\\PaymentStatusSelectInput;\nuse App\\Filament\\Forms\\SupplierSelect;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\FuelService;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\FuelServiceResource\\Pages;\nuse App\\Filament\\Tables\\FuelServiceTable;\nuse App\\Models\\PaymentType;\nuse App\\Models\\Supplier;\nuse App\\Models\\Vehicle;\nuse Filament\\Forms\\Components\\Radio;\nuse Filament\\Tables\\Actions\\ActionGroup;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass FuelServiceResource extends Resource\n{\n    protected static ?string $model = FuelService::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 2;\n\n    protected static ?string $cluster = Purchases::class;\n\n    // protected static ?string $navigationGroup = 'Purchase';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.fuelServices.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.fuelServices.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.fuelServices.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n\n                Grid::make(['default' => 2])->schema([\n\n                    ImageInput::make('image')\n                        ->directory('images/FuelService'),\n\n                    SupplierSelect::make('supplier_id'),\n\n                    DateInput::make('date'),\n\n                    Radio::make('fuel_service')\n                        ->inline()\n                        ->inlineLabel()\n                        ->required()\n                        ->options([\n                            '1' => 'fuel',\n                            '2' => 'service',\n                        ]),\n\n                    BaseSelect::make('vehicle_id')\n                        ->required()\n                        ->relationship(\n                            name: 'vehicle',\n                            modifyQueryUsing: fn (Builder $query) => $query->where('status', '1'),\n                        )\n                        ->getOptionLabelFromRecordUsing(fn (Vehicle $record) => \"{$record->no_register}\")\n                        ->searchable()\n                        ->preload(),\n\n                    BaseSelect::make('payment_type_id')\n                        ->relationship(\n                            name: 'paymentType',\n                            modifyQueryUsing: fn (Builder $query) => $query->where('status', '1'),\n                        )\n                        ->getOptionLabelFromRecordUsing(fn (PaymentType $record) => \"{$record->name}\"),\n\n                    NominalInput::make('km')\n                        ->label('km')\n                        ->suffix('km'),\n\n                    DecimalInput::make('liter')\n                        ->suffix('liter'),\n\n                    CurrencyInput::make('amount'),\n\n                    PaymentStatusSelectInput::make('status'),\n\n                ]),\n\n                Grid::make(['default' => 1])->schema([\n                    Notes::make('notes'),\n                ])\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        $query = FuelService::query();\n\n        if(!Auth::user()->hasRole('admin')) {\n            $query->where('created_by_id', Auth::id());\n        }\n\n        return $table\n            ->query($query)\n            ->poll('60s')\n            ->columns(\n                FuelServiceTable::schema()\n            )\n            ->filters([\n                SelectFilter::make('payment_type_id')\n                    ->label('Payment Type')\n                    ->options([\n                        '1' => 'transfer',\n                        '2' => 'tunai',\n                    ]),\n\n                SelectFilter::make('vehicle_id')\n                    ->label('Vehicle')\n                    ->relationship(\n                        name: 'vehicle',\n                        titleAttribute: 'no_register',\n                        modifyQueryUsing: fn (Builder $query) => $query,\n                    )\n                    ->getOptionLabelFromRecordUsing(fn (Vehicle $record) => \"{$record->vehicle_status}\")\n                    ->searchable()\n                    ->preload()\n                    ,\n\n                SelectFilter::make('fuel_service')\n                    ->label('Fuel Service')\n                    ->options([\n                        '1' => 'fuel',\n                        '2' => 'service',\n                    ]),\n            ])\n            ->actions([\n                ActionGroup::make([\n                    Tables\\Actions\\EditAction::make(),\n                    Tables\\Actions\\ViewAction::make(),\n                ])\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('created_at', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListFuelServices::route('/'),\n            'create' => Pages\\CreateFuelService::route('/create'),\n            'view' => Pages\\ViewFuelService::route('/{record}'),\n            'edit' => Pages\\EditFuelService::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\FuelService;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\FuelServiceResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\FuelServiceResource\\RelationManagers;\n\nclass FuelServiceResource extends Resource\n{\n    protected static ?string $model = FuelService::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.fuelServices.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.fuelServices.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.fuelServices.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Select::make('supplier_id')\n                        ->required()\n                        ->relationship('supplier', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('vehicle_id')\n                        ->required()\n                        ->relationship('vehicle', 'image')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('payment_type_id')\n                        ->required()\n                        ->relationship('paymentType', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    FileUpload::make('image')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    TextInput::make('km')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('liter')\n                        ->nullable()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('amount')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    RichEditor::make('notes')\n                        ->nullable()\n                        ->string()\n                        ->fileAttachmentsVisibility('public'),\n\n                    Select::make('created_by_id')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('approved_by_id')\n                        ->required()\n                        ->relationship('createdBy', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('fuel_service')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            '1' => 'fuel',\n                            '2' => 'service',\n                        ]),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            '1' => 'belum diperiksa',\n                            '2' => 'valid',\n                            '3' => 'perbaiki ',\n                            '4' => 'periksa ulang',\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('supplier.name'),\n\n                TextColumn::make('vehicle.image'),\n\n                TextColumn::make('paymentType.name'),\n\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('km'),\n\n                TextColumn::make('liter'),\n\n                TextColumn::make('amount'),\n\n                TextColumn::make('notes')->limit(255),\n\n                TextColumn::make('created_by_id'),\n\n                TextColumn::make('createdBy.name'),\n\n                TextColumn::make('fuel_service'),\n\n                TextColumn::make('status'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListFuelServices::route('/'),\n            'create' => Pages\\CreateFuelService::route('/create'),\n            'view' => Pages\\ViewFuelService::route('/{record}'),\n            'edit' => Pages\\EditFuelService::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}