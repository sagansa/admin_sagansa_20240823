{
    "conflicts": [
        {
            "id": "0b8bba9e-00af-4335-ae60-fa49a96b1667",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Clusters\\Purchases;\nuse App\\Filament\\Columns\\ImageOpenUrlColumn;\nuse App\\Filament\\Columns\\StatusSupplierColumn;\nuse App\\Filament\\Forms\\AddressForm;\nuse App\\Filament\\Forms\\ImageInput;\nuse App\\Filament\\Forms\\SupplierStatusSelectInput;\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse App\\Models\\Supplier;\nuse Filament\\Tables\\Table;\nuse Filament\\Tables\\Columns\\Layout\\Split;\nuse Filament\\Tables\\Columns\\Layout\\Stack;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse App\\Filament\\Resources\\Panel\\SupplierResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\SupplierResource\\RelationManagers;\nuse App\\Models\\DeliveryAddress;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Filament\\Forms\\Components\\Group;\nuse Filament\\Tables\\Actions\\ActionGroup;\nuse Illuminate\\Database\\Eloquent\\Collection;\n\nclass SupplierResource extends Resource\n{\n    protected static ?string $model = Supplier::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $cluster = Purchases::class;\n\n    // protected static ?string $navigationGroup = 'Purchase';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.suppliers.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.suppliers.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.suppliers.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Group::make()->schema([\n                Section::make()->schema([\n                    Grid::make(['default' => 1])->schema([\n\n                        ImageInput::make('image')\n                            ->directory('images/Supplier'),\n\n                        TextInput::make('name')\n                            ->required()\n                            ->hiddenLabel()\n                            ->placeholder('Name')\n                            ->string()\n                            ->autofocus()\n                            ->afterStateUpdated(fn (callable $set, $state) => $set('name', ucwords(strtolower($state)))), // Mengubah teks menjadi capital case saat diinput\n\n                        Select::make('bank_id')\n                            ->nullable()\n                            ->hiddenLabel()\n                            ->placeholder('Bank')\n                            ->relationship('bank', 'name')\n                            ->searchable()\n                            ->preload(),\n\n                        TextInput::make('bank_account_name')\n                            ->nullable()\n                            ->hiddenLabel()\n                            ->placeholder('Bank Account Name')\n                            ->string(),\n\n                        TextInput::make('bank_account_no')\n                            ->nullable()\n                            ->hiddenLabel()\n                            ->placeholder('Bank Accunt No')\n                            ->string(),\n\n                        SupplierStatusSelectInput::make('status'),\n\n                    ]),\n                ]) ->columnSpan(['lg' => 1]),\n\n                ]),\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema(AddressForm::schema())\n\n                ])->columnSpan(['lg' => 1])\n\n        ])->columns(2);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n\n                ImageOpenUrlColumn::make('image')\n                    ->url(fn($record) => asset('storage/' . $record->image))\n                    ->alignLeft(),\n\n                TextColumn::make('name')\n                    ->weight('medium')\n                    ->sortable()\n                    ->searchable(),\n\n                TextColumn::make('city.name')->alignLeft(),\n\n                TextColumn::make('bank.name')\n                    ->sortable(),\n\n                TextColumn::make('bank_account_name')\n                    ->searchable(),\n\n                TextColumn::make('bank_account_no')\n                    ->searchable(),\n\n                StatusSupplierColumn::make('status')\n                    ->weight('medium'),\n\n                TextColumn::make('user.name'),\n\n            ])\n            ->filters([\n                SelectFilter::make('bank')\n                    ->relationship('bank', 'name')\n            ])\n            ->actions([\n                ActionGroup::make([\n                    Tables\\Actions\\EditAction::make(),\n                    // Tables\\Actions\\ViewAction::make(),\n                ])\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                    Tables\\Actions\\BulkAction::make('setStatusToThree')\n                        ->label('Set Status to Valid')\n                        ->icon('heroicon-o-check')\n                        ->requiresConfirmation()\n                        ->action(function (Collection $records) {\n                            Supplier::whereIn('id', $records->pluck('id'))->update(['status' => 2]);\n                        })\n                        ->color('success'),\n                    Tables\\Actions\\BulkAction::make('setStatusToThree')\n                        ->label('Set Status to Blaclist')\n                        ->icon('heroicon-o-x-mark')\n                        ->requiresConfirmation()\n                        ->action(function (Collection $records) {\n                            Supplier::whereIn('id', $records->pluck('id'))->update(['status' => 3]);\n                        })\n                        ->color('gray'),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListSuppliers::route('/'),\n            'create' => Pages\\CreateSupplier::route('/create'),\n            'view' => Pages\\ViewSupplier::route('/{record}'),\n            'edit' => Pages\\EditSupplier::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse App\\Models\\Supplier;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\FileUpload;\nuse App\\Filament\\Resources\\Panel\\SupplierResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\SupplierResource\\RelationManagers;\n\nclass SupplierResource extends Resource\n{\n    protected static ?string $model = Supplier::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.suppliers.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.suppliers.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.suppliers.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                    TextInput::make('address')\n                        ->required()\n                        ->string(),\n\n                    Select::make('province_id')\n                        ->nullable()\n                        ->relationship('province', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('city_id')\n                        ->nullable()\n                        ->relationship('city', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('district_id')\n                        ->nullable()\n                        ->relationship('district', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('subdistrict_id')\n                        ->nullable()\n                        ->relationship('subdistrict', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('postal_code_id')\n                        ->required()\n                        ->relationship('postalCode', 'id')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('bank_id')\n                        ->nullable()\n                        ->relationship('bank', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('bank_account_name')\n                        ->nullable()\n                        ->string(),\n\n                    TextInput::make('bank_account_no')\n                        ->nullable()\n                        ->string(),\n\n                    Select::make('user_id')\n                        ->required()\n                        ->relationship('user', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('latitude')\n                        ->nullable()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('longitude')\n                        ->nullable()\n                        ->numeric()\n                        ->step(1),\n\n                    FileUpload::make('image')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    Select::make('status')\n                        ->required()\n                        ->default('1')\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            '1' => 'belum diperiksa',\n                            '2' => 'valid',\n                            '3' => 'tidak valid',\n                            '4' => 'blacklist',\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('address'),\n\n                TextColumn::make('province.name'),\n\n                TextColumn::make('city.name'),\n\n                TextColumn::make('district.name'),\n\n                TextColumn::make('subdistrict.name'),\n\n                TextColumn::make('postalCode.id'),\n\n                TextColumn::make('bank.name'),\n\n                TextColumn::make('bank_account_name'),\n\n                TextColumn::make('bank_account_no'),\n\n                TextColumn::make('user.name'),\n\n                TextColumn::make('latitude'),\n\n                TextColumn::make('longitude'),\n\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('status'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListSuppliers::route('/'),\n            'create' => Pages\\CreateSupplier::route('/create'),\n            'view' => Pages\\ViewSupplier::route('/{record}'),\n            'edit' => Pages\\EditSupplier::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}