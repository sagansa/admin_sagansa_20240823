{
    "conflicts": [
        {
            "id": "d4a2eee3-14e8-4295-8237-ed7c5ba1ce3e",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Clusters\\Stock;\nuse App\\Filament\\Columns\\ImageOpenUrlColumn;\nuse App\\Filament\\Columns\\StatusColumn;\nuse App\\Filament\\Forms\\DateInput;\nuse App\\Filament\\Forms\\ImageInput;\nuse App\\Filament\\Forms\\Notes;\nuse App\\Filament\\Forms\\StatusSelectInput;\nuse App\\Filament\\Forms\\StoreSelect;\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\TransferStock;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\TransferStockResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\TransferStockResource\\RelationManagers;\nuse Filament\\Forms\\Components\\Repeater;\nuse Filament\\Tables\\Actions\\ActionGroup;\n\nclass TransferStockResource extends Resource\n{\n    protected static ?string $model = TransferStock::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $cluster = Stock::class;\n\n    protected static ?string $navigationGroup = 'Stock';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.transferStocks.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.transferStocks.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.transferStocks.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n\n                    ImageInput::make('image')\n                        ->disk('public')\n                        ->directory('images/TransferStock'),\n\n                    DateInput::make('date'),\n\n                    StoreSelect::make('from_store_id')\n                        ->required()\n                        ->relationship(\n                            name: 'storeFrom',\n                            titleAttribute: 'nickname',\n                            modifyQueryUsing: fn (Builder $query) => $query->where('status', '<>', 8)->orderBy('name', 'asc'),)\n                        ->preload()\n                        ->reactive()\n                        ->native(false),\n\n                    StoreSelect::make('to_store_id')\n                        ->required()\n                        ->relationship(\n                            name: 'storeTo',\n                            titleAttribute: 'nickname',\n                            modifyQueryUsing: fn (Builder $query) => $query->where('status', '<>', 8)->orderBy('name', 'asc'),)\n                        ->preload()\n                        ->reactive()\n                        ->native(false),\n\n                    StatusSelectInput::make('status'),\n\n                    Select::make('received_by_id')\n                        ->required()\n                        ->relationship('receivedBy', 'name', fn (Builder $query) => $query\n                            ->whereHas('roles', fn (Builder $query) => $query\n                                ->where('name', 'staff') || $query\n                                ->where('name', 'supervisor')))\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('sent_by_id')\n                        ->required()\n                        ->relationship('sentBy', 'name', fn (Builder $query) => $query\n                            ->whereHas('roles', fn (Builder $query) => $query\n                                ->where('name', 'staff') || $query\n                                ->where('name', 'supervisor')))\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n\n                ]),\n            ]),\n\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Repeater::make('productTransferStocks')\n                ]),\n            ]),\n\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Notes::make('notes'),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                ImageOpenUrlColumn::make('image'),\n\n                TextColumn::make('date'),\n\n                TextColumn::make('storeFrom.nickname'),\n\n                TextColumn::make('storeTo.nickname'),\n\n                TextColumn::make('productTransferStocks', 'Product Transfer Stocks')\n                    ->label('Transfer Stocks')\n                    ->html()\n                    ->formatStateUsing(function (TransferStock $record) {\n                        return implode('<br>', $record->productTransferStocks->map(function ($productTransferStock) {\n                            return \"{$productTransferStock->product->name} = {$productTransferStock->quantity} {$productTransferStock->product->unit->unit}\";\n                        })->toArray());\n                    })\n                    ->extraAttributes(['class' => 'whitespace-pre-wrap']),\n\n                StatusColumn::make('status'),\n\n                TextColumn::make('receivedBy.name'),\n\n                TextColumn::make('sentBy.name'),\n\n                TextColumn::make('approvedBy.name'),\n            ])\n            ->filters([])\n            ->actions([\n                ActionGroup::make([\n                    Tables\\Actions\\EditAction::make(),\n                    Tables\\Actions\\ViewAction::make(),\n                ])\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListTransferStocks::route('/'),\n            'create' => Pages\\CreateTransferStock::route('/create'),\n            'view' => Pages\\ViewTransferStock::route('/{record}'),\n            'edit' => Pages\\EditTransferStock::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\TransferStock;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\TransferStockResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\TransferStockResource\\RelationManagers;\n\nclass TransferStockResource extends Resource\n{\n    protected static ?string $model = TransferStock::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Stock';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.transferStocks.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.transferStocks.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.transferStocks.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    DatePicker::make('date')\n                        ->rules(['date'])\n                        ->required()\n                        ->native(false),\n\n                    FileUpload::make('image')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    Select::make('from_store_id')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('to_store_id')\n                        ->required()\n                        ->relationship('storeFrom', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    RichEditor::make('notes')\n                        ->nullable()\n                        ->string()\n                        ->fileAttachmentsVisibility('public'),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('approved_by_id')\n                        ->nullable()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('sent_by_id')\n                        ->required()\n                        ->relationship('approvedBy', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('received_by_id')\n                        ->required()\n                        ->relationship('receivedBy', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('date')->since(),\n\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('from_store_id'),\n\n                TextColumn::make('storeFrom.name'),\n\n                TextColumn::make('notes')->limit(255),\n\n                TextColumn::make('status'),\n\n                TextColumn::make('approved_by_id'),\n\n                TextColumn::make('approvedBy.name'),\n\n                TextColumn::make('receivedBy.name'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListTransferStocks::route('/'),\n            'create' => Pages\\CreateTransferStock::route('/create'),\n            'view' => Pages\\ViewTransferStock::route('/{record}'),\n            'edit' => Pages\\EditTransferStock::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}