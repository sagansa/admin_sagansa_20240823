{
    "conflicts": [
        {
            "id": "6b8f5070-1095-4c41-a118-58ae2cfd633e",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ClosingStoreResource\\RelationManagers;\n\nuse App\\Filament\\Columns\\CurrencyColumn;\nuse App\\Filament\\Forms\\ImageInput;\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\ClosingStoreResource;\nuse App\\Models\\AccountCashless;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass CashlessesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'cashlesses';\n\n    protected static ?string $recordTitleAttribute = 'image';\n\n    public function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 1])->schema([\n                Select::make('account_cashless_id')\n                    ->required()\n                    ->relationship(\n                        name: 'accountCashless',\n                        modifyQueryUsing: function (Builder $query, callable $get) {\n                            // Ambil store_id dari model yang sedang diakses\n                            $storeId = $get('../../store_id');\n\n                            // Filter accountCashless berdasarkan store_id yang sesuai\n                            $query->where('store_id', $storeId);\n\n                            return $query;\n                        }\n                    )\n                    ->getOptionLabelFromRecordUsing(fn (AccountCashless $record) => $record->account_cashless_name)\n                    ->preload(),\n\n                ImageInput::make('image')\n\n                        ->directory('images/Cashless'),\n\n                TextInput::make('bruto_apl')\n                    ->label('Bruto Application')\n                    ->prefix('Rp')\n                    ->required()\n                    ->numeric(),\n\n                TextInput::make('netto_apl')\n                    ->label('Netto Application')\n                    ->prefix('Rp')\n                    ->nullable()\n                    ->numeric(),\n\n                TextInput::make('bruto_real')\n                    ->label('Bruto Real')\n                    ->prefix('Rp')\n                    ->nullable()\n                    ->numeric(),\n\n                TextInput::make('netto_real')\n                    ->label('Netto Real')\n                    ->prefix('Rp')\n                    ->nullable()\n                    ->numeric(),\n\n                ImageInput::make('image_canceled'),\n\n                TextInput::make('canceled')\n                    ->prefix('Rp')\n\n                    ->directory('images/Cashless')\n                    ->required()\n                    ->numeric(),\n            ]),\n        ]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                TextColumn::make('accountCashless.email'),\n\n                ImageColumn::make('image')->visibility('public'),\n\n                CurrencyColumn::make('bruto_apl')->label(__('crud.cashlesses.inputs.bruto_apl.label')),\n\n                CurrencyColumn::make('netto_apl'),\n\n                CurrencyColumn::make('bruto_real'),\n\n                CurrencyColumn::make('netto_real'),\n\n                ImageColumn::make('image_canceled'),\n\n                TextColumn::make('canceled'),\n            ])\n            ->filters([])\n            // ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                // Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([\n                // Tables\\Actions\\BulkActionGroup::make([\n                //     Tables\\Actions\\DeleteBulkAction::make(),\n                // ]),\n            ]);\n    }\n\n    public function isReadOnly(): bool\n    {\n        return false;\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ClosingStoreResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\FileUpload;\nuse App\\Filament\\Resources\\Panel\\ClosingStoreResource;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass CashlessesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'cashlesses';\n\n    protected static ?string $recordTitleAttribute = 'image';\n\n    public function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 1])->schema([\n                Select::make('account_cashless_id')\n                    ->required()\n                    ->relationship('accountCashless', 'email')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n\n                FileUpload::make('image')\n                    ->rules(['image'])\n                    ->nullable()\n                    ->maxSize(1024)\n                    ->image()\n                    ->imageEditor()\n                    ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                TextInput::make('bruto_apl')\n                    ->required()\n                    ->numeric()\n                    ->step(1),\n\n                TextInput::make('netto_apl')\n                    ->nullable()\n                    ->numeric()\n                    ->step(1),\n\n                TextInput::make('bruto_real')\n                    ->nullable()\n                    ->numeric()\n                    ->step(1),\n\n                TextInput::make('netto_real')\n                    ->nullable()\n                    ->numeric()\n                    ->step(1),\n\n                TextInput::make('image_canceled')\n                    ->nullable()\n                    ->string(),\n\n                TextInput::make('canceled')\n                    ->required()\n                    ->numeric()\n                    ->step(1),\n            ]),\n        ]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                TextColumn::make('accountCashless.email'),\n\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('bruto_apl'),\n\n                TextColumn::make('netto_apl'),\n\n                TextColumn::make('bruto_real'),\n\n                TextColumn::make('netto_real'),\n\n                TextColumn::make('image_canceled'),\n\n                TextColumn::make('canceled'),\n            ])\n            ->filters([])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ]);\n    }\n}\n"
        }
    ]
}