{
    "conflicts": [
        {
            "id": "ba2ca625-2bc9-4b4d-ac50-19262409dfe9",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Clusters\\Store as ClustersStore;\nuse App\\Filament\\Forms\\BaseTextInput;\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\Store;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\StoreResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\StoreResource\\RelationManagers;\nuse Filament\\Tables\\Actions\\ActionGroup;\n\nclass StoreResource extends Resource\n{\n    protected static ?string $model = Store::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $cluster = ClustersStore::class;\n\n    protected static ?string $navigationGroup = 'Store';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.stores.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.stores.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.stores.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    BaseTextInput::make('name')\n                        ->autofocus(),\n\n                    BaseTextInput::make('nickname'),\n\n                    TextInput::make('no_telp')\n                        ->label('Telephone')\n                        ->nullable()\n                        ->string(),\n\n                    BaseTextInput::make('email')\n                        ->unique('stores', 'email', ignoreRecord: true)\n                        ->email(),\n\n                    Select::make('status')\n                        ->required()\n                        ->preload()\n                        ->options([\n                            '1' => 'warung',\n                            '2' => 'gudang',\n                            '3' => 'produksi',\n                            '4' => 'warung + gudang',\n                            '5' => 'warung + produksi',\n                            '6' => 'gudang + produksi',\n                            '7' => 'warung + gudang + produksi',\n                            '8' => 'tidak aktif'\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('name')->searchable()->sortable(),\n\n                TextColumn::make('nickname')->searchable()->sortable(),\n\n                TextColumn::make('no_telp')->searchable(),\n\n                TextColumn::make('email')->searchable(),\n\n                TextColumn::make('user.name'),\n\n                TextColumn::make('status')\n                    ->formatStateUsing(\n                        fn(string $state): string => match ($state) {\n                            '1' => 'warung',\n                            '2' => 'gudang',\n                            '3' => 'produksi',\n                            '4' => 'warung + gudang',\n                            '5' => 'warung + produksi',\n                            '6' => 'gudang + produksi',\n                            '7' => 'warung + gudang + produksi',\n                            '8' => 'tidak aktif',\n                            default => $state,\n                        }\n                    ),\n            ])\n            ->filters([])\n            ->actions([\n                ActionGroup::make([\n                    Tables\\Actions\\EditAction::make(),\n                    Tables\\Actions\\ViewAction::make(),\n                ])\n            ])\n            ->bulkActions([\n                // Tables\\Actions\\BulkActionGroup::make([\n                //     Tables\\Actions\\DeleteBulkAction::make(),\n                // ]),\n            ])\n            ->defaultSort('nickname', 'asc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListStores::route('/'),\n            'create' => Pages\\CreateStore::route('/create'),\n            'view' => Pages\\ViewStore::route('/{record}'),\n            'edit' => Pages\\EditStore::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\Store;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\StoreResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\StoreResource\\RelationManagers;\n\nclass StoreResource extends Resource\n{\n    protected static ?string $model = Store::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Store';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.stores.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.stores.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.stores.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                    TextInput::make('nickname')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('no_telp')\n                        ->nullable()\n                        ->string(),\n\n                    TextInput::make('email')\n                        ->required()\n                        ->string()\n                        ->unique('stores', 'email', ignoreRecord: true)\n                        ->email(),\n\n                    Select::make('user_id')\n                        ->required()\n                        ->relationship('user', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('nickname'),\n\n                TextColumn::make('no_telp'),\n\n                TextColumn::make('email'),\n\n                TextColumn::make('user.name'),\n\n                TextColumn::make('status'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListStores::route('/'),\n            'create' => Pages\\CreateStore::route('/create'),\n            'view' => Pages\\ViewStore::route('/{record}'),\n            'edit' => Pages\\EditStore::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}