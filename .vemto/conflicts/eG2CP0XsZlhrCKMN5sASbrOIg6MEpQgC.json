{
    "conflicts": [
        {
            "id": "2cbc0e4a-8e75-4106-b331-9bf01eabc331",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ClosingStoreResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse App\\Filament\\Resources\\Panel\\ClosingStoreResource;\nuse App\\Filament\\Tables\\DailySalaryTable;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass DailySalariesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'dailySalaries';\n\n    protected static ?string $recordTitleAttribute = 'date';\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns(\n                DailySalaryTable::schema()\n            )\n            ->filters([])\n            ->headerActions([\n            ])\n            ->actions([\n                Tables\\Actions\\DetachAction::make()\n                    ->action(function ($record) {\n                        $record->pivot->delete();\n                        $record->update(['status' => 1]);\n                    }),\n            ])\n            ->bulkActions([\n                // Tables\\Actions\\BulkActionGroup::make([\n\n                //     Tables\\Actions\\DetachBulkAction::make()\n                //         ->action(function ($records) {\n                //                 foreach ($records as $record) {\n                //                     $record->paymentReceipts()->detach();\n                //                     $record->update(['status' => 1]);\n                //                 }\n                //             }),\n                // ]),\n            ]);\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ClosingStoreResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse App\\Filament\\Resources\\Panel\\ClosingStoreResource;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass DailySalariesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'dailySalaries';\n\n    protected static ?string $recordTitleAttribute = 'date';\n\n    public function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 1])->schema([\n                Select::make('store_id')\n                    ->required()\n                    ->relationship('store', 'name')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n\n                Select::make('shift_store_id')\n                    ->required()\n                    ->relationship('shiftStore', 'name')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n\n                DatePicker::make('date')\n                    ->rules(['date'])\n                    ->required()\n                    ->native(false),\n\n                TextInput::make('amount')\n                    ->required()\n                    ->numeric()\n                    ->step(1),\n\n                Select::make('payment_type_id')\n                    ->required()\n                    ->relationship('paymentType', 'name')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n\n                Select::make('status')\n                    ->required()\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n\n                Select::make('created_by_id')\n                    ->nullable()\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n            ]),\n        ]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                TextColumn::make('store.name'),\n\n                TextColumn::make('shiftStore.name'),\n\n                TextColumn::make('date')->since(),\n\n                TextColumn::make('amount'),\n\n                TextColumn::make('paymentType.name'),\n\n                TextColumn::make('status'),\n\n                TextColumn::make('created_by_id'),\n            ])\n            ->filters([])\n            ->headerActions([\n                Tables\\Actions\\CreateAction::make(),\n\n                Tables\\Actions\\AttachAction::make()->form(\n                    fn(Tables\\Actions\\AttachAction $action): array => [\n                        $action->getRecordSelect(),\n                    ]\n                ),\n            ])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n                Tables\\Actions\\DetachAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n\n                    Tables\\Actions\\DetachBulkAction::make(),\n                ]),\n            ]);\n    }\n}\n"
        }
    ]
}