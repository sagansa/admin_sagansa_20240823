{
    "conflicts": [
        {
            "id": "ecde8aaf-de21-444c-b8db-f29b31b1df99",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Bulks\\ValidBulkAction;\nuse App\\Filament\\Clusters\\Stock;\nuse App\\Filament\\Columns\\StatusColumn;\nuse App\\Filament\\Filters\\SelectStoreFilter;\nuse App\\Filament\\Forms\\DateInput;\nuse App\\Filament\\Forms\\StockCardForm;\nuse App\\Filament\\Forms\\StockRepeaterForm;\nuse App\\Filament\\Forms\\StoreSelect;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\RemainingStorage;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse App\\Filament\\Resources\\Panel\\RemainingStorageResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\RemainingStorageResource\\RelationManagers;\nuse App\\Filament\\Tables\\StockCardTable;\nuse App\\Filament\\Tables\\ValidAction;\nuse Filament\\Tables\\Actions\\ActionGroup;\nuse Illuminate\\Database\\Eloquent\\Collection;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass RemainingStorageResource extends Resource\n{\n    protected static ?string $model = RemainingStorage::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $cluster = Stock::class;\n\n    protected static ?string $navigationGroup = 'Stock';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.remainingStorages.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.remainingStorages.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.remainingStorages.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema(\n            StockCardForm::getStockCardStorage(),\n        );\n    }\n\n    public static function table(Table $table): Table\n    {\n        $query = RemainingStorage::query();\n\n        if (Auth::user()->hasRole('staff')) {\n            $query->where('user_id', Auth::id());\n        }\n\n        $query->where('for', 'remaining_storage');\n\n        return $table\n            ->poll('60s')\n            ->query($query)\n            ->columns(\n                StockCardTable::schema(RemainingStorage::class)\n            )\n            ->filters([SelectStoreFilter::make('store_id')])\n            ->actions(ValidAction::getAction(self::$model)['actions'])\n            ->bulkActions(ValidAction::getAction(self::$model)['bulkActions'])\n            ->defaultSort('date', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListRemainingStorages::route('/'),\n            'create' => Pages\\CreateRemainingStorage::route('/create'),\n            'view' => Pages\\ViewRemainingStorage::route('/{record}'),\n            'edit' => Pages\\EditRemainingStorage::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\RemainingStorage;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse App\\Filament\\Resources\\Panel\\RemainingStorageResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\RemainingStorageResource\\RelationManagers;\n\nclass RemainingStorageResource extends Resource\n{\n    protected static ?string $model = RemainingStorage::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.remainingStorages.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.remainingStorages.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.remainingStorages.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Select::make('for')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            'remaining store' => 'Remaining store',\n                            'remaining storage' => 'Remaining storage',\n                            'employee consumption' => 'Employee consumption',\n                            'store consumption' => 'Store consumption',\n                        ]),\n\n                    DatePicker::make('date')\n                        ->rules(['date'])\n                        ->required()\n                        ->native(false),\n\n                    Select::make('store_id')\n                        ->required()\n                        ->relationship('store', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('user_id')\n                        ->required()\n                        ->relationship('user', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('for'),\n\n                TextColumn::make('date')->since(),\n\n                TextColumn::make('store.name'),\n\n                TextColumn::make('user.name'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListRemainingStorages::route('/'),\n            'create' => Pages\\CreateRemainingStorage::route('/create'),\n            'view' => Pages\\ViewRemainingStorage::route('/{record}'),\n            'edit' => Pages\\EditRemainingStorage::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}