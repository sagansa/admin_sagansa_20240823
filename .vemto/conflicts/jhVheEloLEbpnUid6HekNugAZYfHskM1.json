{
    "conflicts": [
        {
            "id": "2f6c6b87-4ced-4364-b287-89cd1e6e2b2e",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Columns\\CurrencyColumn;\nuse App\\Filament\\Columns\\StatusColumn;\nuse App\\Filament\\Forms\\Notes;\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\ClosingStore;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\ClosingStoreResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\ClosingStoreResource\\RelationManagers;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass ClosingStoreResource extends Resource\n{\n    protected static ?string $model = ClosingStore::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Cash';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.closingStores.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.closingStores.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.closingStores.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 3])->schema([\n                    Select::make('store_id')\n                        ->required()\n                        ->relationship('store', 'nickname')\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('shift_store_id')\n                        ->required()\n                        ->relationship('shiftStore', 'name')\n                        ->preload()\n                        ->native(false),\n\n                    DatePicker::make('date')\n                        ->rules(['date'])\n                        ->default('today')\n                        ->required()\n                        ->native(false),\n\n                    TextInput::make('cash_from_yesterday')\n                        ->prefix('Rp')\n                        ->required()\n                        ->numeric(),\n\n                    TextInput::make('cash_for_tomorrow')\n                        ->prefix('Rp')\n                        ->required()\n                        ->numeric(),\n\n                    TextInput::make('total_cash_transfer')\n                        ->prefix('Rp')\n                        ->required()\n                        ->numeric(),\n\n                    Select::make('closing_courier_id')\n                        ->relationship('closingCourier', 'bank_id'),\n\n                    Select::make('transfer_by_id')\n                        ->nullable()\n                        ->relationship('transferBy', 'name')\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('status')\n                        ->required()\n                        ->hidden(fn ($operation) => $operation === 'create')\n                        ->disabled(fn () => Auth::user()->hasRole('staff'))\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            '1' => 'belum diperiksa',\n                            '2' => 'valid',\n                            '3' => 'diperbaiki',\n                            '4' => 'periksa ulang',\n                        ]),\n\n                    Notes::make('notes'),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('store.nickname'),\n\n                TextColumn::make('shiftStore.name'),\n\n                TextColumn::make('date'),\n\n                CurrencyColumn::make('cash_from_yesterday'),\n\n                CurrencyColumn::make('cash_for_tomorrow'),\n\n                CurrencyColumn::make('total_cash_transfer'),\n\n                TextColumn::make('createdBy.name'),\n\n                TextColumn::make('transferBy.name'),\n\n                StatusColumn::make('status'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [\n            RelationManagers\\CashlessesRelationManager::class,\n            RelationManagers\\InvoicePurchasesRelationManager::class,\n            RelationManagers\\DailySalariesRelationManager::class,\n            RelationManagers\\FuelServicesRelationManager::class,\n        ];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListClosingStores::route('/'),\n            'create' => Pages\\CreateClosingStore::route('/create'),\n            'view' => Pages\\ViewClosingStore::route('/{record}'),\n            'edit' => Pages\\EditClosingStore::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\ClosingStore;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\ClosingStoreResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\ClosingStoreResource\\RelationManagers;\n\nclass ClosingStoreResource extends Resource\n{\n    protected static ?string $model = ClosingStore::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Cash';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.closingStores.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.closingStores.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.closingStores.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Select::make('store_id')\n                        ->required()\n                        ->relationship('store', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('shift_store_id')\n                        ->required()\n                        ->relationship('shiftStore', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    DatePicker::make('date')\n                        ->rules(['date'])\n                        ->required()\n                        ->native(false),\n\n                    TextInput::make('cash_from_yesterday')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('cash_for_tomorrow')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('total_cash_transfer')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    RichEditor::make('notes')\n                        ->nullable()\n                        ->string()\n                        ->fileAttachmentsVisibility('public'),\n\n                    Select::make('created_by_id')\n                        ->nullable()\n                        ->relationship('createdBy', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('approved_by_id')\n                        ->nullable()\n                        ->relationship('transferBy', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('transfer_by_id')\n                        ->nullable()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            '1' => 'belum diperiksa',\n                            '2' => 'valid',\n                            '3' => 'diperbaiki',\n                            '4' => 'periksa ulang',\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('store.name'),\n\n                TextColumn::make('shiftStore.name'),\n\n                TextColumn::make('date')->since(),\n\n                TextColumn::make('cash_from_yesterday'),\n\n                TextColumn::make('cash_for_tomorrow'),\n\n                TextColumn::make('total_cash_transfer'),\n\n                TextColumn::make('notes')->limit(255),\n\n                TextColumn::make('createdBy.name'),\n\n                TextColumn::make('transferBy.name'),\n\n                TextColumn::make('transfer_by_id'),\n\n                TextColumn::make('status'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [\n            RelationManagers\\CashlessesRelationManager::class,\n            RelationManagers\\InvoicePurchasesRelationManager::class,\n            RelationManagers\\DailySalariesRelationManager::class,\n            RelationManagers\\FuelServicesRelationManager::class,\n        ];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListClosingStores::route('/'),\n            'create' => Pages\\CreateClosingStore::route('/create'),\n            'view' => Pages\\ViewClosingStore::route('/{record}'),\n            'edit' => Pages\\EditClosingStore::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}