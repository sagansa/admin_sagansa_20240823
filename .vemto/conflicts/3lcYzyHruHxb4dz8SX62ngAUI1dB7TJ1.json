{
    "conflicts": [
        {
            "id": "85226175-e304-43cd-afd0-3e8500103e34",
            "currentContent": "<?php\n\nnamespace App\\Http\\Controllers\\api;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Hash;\n\nclass AuthController extends Controller\n{\n    public function login(Request $request)\n    {\n        $request->validate([\n            'email' => 'required|string|email',\n            'password' => 'required'\n        ]);\n\n        $user = User::where('email', $request->email)->first();\n        if (!$user || ! Hash::check($request->password, $user->password)) {\n            return response()->json([\n                'success' => false,\n                'data' => null,\n                'message' => 'Invalid email or password'\n            ], 422);\n        }\n\n        $token = $user->createToken('API Token')->plainTextToken;\n\n        return response()->json([\n            'success' => true,\n            'data' => [\n                'access_token' => $token,\n                'token_type' => 'Bearer',\n                'user' => $user\n            ],\n            'message' => 'Login successful'\n        ]);\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\JsonResponse;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Validation\\ValidationException;\n\nclass AuthController extends Controller\n{\n    public function login(Request $request): JsonResponse\n    {\n        $credentials = $request->validate([\n            'email' => 'required|email',\n            'password' => 'required',\n        ]);\n\n        if (!auth()->attempt($credentials)) {\n            throw ValidationException::withMessages([\n                'email' => [trans('auth.failed')],\n            ]);\n        }\n\n        $user = User::whereEmail($request->email)->firstOrFail();\n\n        $token = $user->createToken('auth-token');\n\n        return response()->json([\n            'token' => $token->plainTextToken,\n        ]);\n    }\n}\n"
        }
    ]
}