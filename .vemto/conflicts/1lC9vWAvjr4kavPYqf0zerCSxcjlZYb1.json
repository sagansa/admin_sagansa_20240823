{
    "conflicts": [
        {
            "id": "e4bac39f-e2e9-4243-aa1c-eb8b61419c6b",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Clusters\\HRD;\nuse App\\Filament\\Clusters\\Salaries;\nuse App\\Filament\\Forms\\BaseSelect;\nuse App\\Filament\\Forms\\Notes;\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\PermitEmployee;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\PermitEmployeeResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\PermitEmployeeResource\\RelationManagers;\nuse Illuminate\\Database\\Eloquent\\Collection;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass PermitEmployeeResource extends Resource\n{\n    protected static ?string $model = PermitEmployee::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Salaries';\n\n    protected static ?string $pluralLabel = 'Permits';\n\n    protected static ?string $cluster = HRD::class;\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.permitEmployees.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.permitEmployees.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.permitEmployees.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 2])->schema([\n                    BaseSelect::make('reason')\n                        // ->searchable()\n                        ->preload()\n                        ->options([\n                            '1' => 'menikah',\n                            '2' => 'sakit',\n                            '3' => 'pulkam',\n                            '4' => 'libur',\n                            '5' => 'keluarga meninggal',\n                        ]),\n\n                    Grid::make()->schema([\n                        DatePicker::make('from_date')\n                            ->rules(['date'])\n                            ->required()\n                            ->hiddenLabel()\n                            // ->placeholder('From Date')\n                            ->prefix('From Date'),\n\n                        DatePicker::make('until_date')\n                            ->rules([\n                                'date',\n                                'after:from_date', // Add this rule\n                            ])\n                            ->required()\n                            ->hiddenLabel()\n                            ->prefix('Until Date')\n                            ->minDate(fn ($get) => $get('from_date'))\n                        ]),\n\n                    BaseSelect::make('status')\n                        ->required(fn () => Auth::user()->hasRole('admin'))\n                        ->hidden(fn ($operation) => $operation === 'create')\n                        ->disabled(fn () => Auth::user()->hasRole('staff'))\n                        // ->searchable()\n                        ->placeholder('Status')\n                        ->preload()\n                        ->options([\n                            '1' => 'belum disetujui',\n                            '2' => 'disetujui',\n                            '3' => 'tidak disetujui',\n                            '4' => 'pengajuan ulang',\n                        ]),\n\n                    Notes::make('notes'),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        $query = PermitEmployee::query();\n\n        if (!Auth::user()->hasRole('admin')) {\n            $query->where('created_by_id', Auth::id());\n        }\n\n        return $table\n            ->query($query)\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('createdBy.name')\n                    ->hidden(fn () => !Auth::user()->hasRole('admin')),\n\n                TextColumn::make('reason')\n                    ->formatStateUsing(\n                        fn(string $state): string => match ($state) {\n                            '1' => 'menikah',\n                            '2' => 'sakit',\n                            '3' => 'pulkam',\n                            '4' => 'libur',\n                            '5' => 'keluarga meninggal',\n                        }\n                    ),\n\n                TextColumn::make('from_date'),\n\n                TextColumn::make('until_date'),\n\n                TextColumn::make('status')\n                    ->formatStateUsing(\n                        fn(string $state): string => match ($state) {\n                            '1' => 'belum disetujui',\n                            '2' => 'disetujui',\n                            '3' => 'tidak disetujui',\n                            '4' => 'pengajuan ulang',\n                        }\n                    )\n                    ->badge()\n                    ->color(\n                        fn(string $state): string => match ($state) {\n                            '1' => 'warning',\n                            '2' => 'success',\n                            '3' => 'gray',\n                            '4' => 'danger',\n                        }\n                    ),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                    Tables\\Actions\\BulkAction::make('approve')\n                        ->label('setujui')\n                        ->icon('heroicon-o-check')\n                        ->action(fn (Collection $records) => $records->each->update(['status' => '2']))\n                        ->deselectRecordsAfterCompletion()\n                        ->requiresConfirmation(),\n\n                    Tables\\Actions\\BulkAction::make('notApprove')\n                        ->label('Tidak dietujui')\n                        ->icon('heroicon-o-x-mark')\n                        ->action(fn (Collection $records) => $records->each->update(['status' => '3']))\n                        ->deselectRecordsAfterCompletion()\n                        ->requiresConfirmation(),\n                        ]),\n                    ])\n\n            ->defaultSort('created_at', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListPermitEmployees::route('/'),\n            'create' => Pages\\CreatePermitEmployee::route('/create'),\n            'view' => Pages\\ViewPermitEmployee::route('/{record}'),\n            'edit' => Pages\\EditPermitEmployee::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\PermitEmployee;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\PermitEmployeeResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\PermitEmployeeResource\\RelationManagers;\n\nclass PermitEmployeeResource extends Resource\n{\n    protected static ?string $model = PermitEmployee::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.permitEmployees.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.permitEmployees.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.permitEmployees.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Select::make('reason')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            '1' => 'menikah',\n                            '2' => 'sakit',\n                            '3' => 'pulkam',\n                            '4' => 'libur',\n                            '5' => 'keluarga meninggal',\n                        ]),\n\n                    DatePicker::make('from_date')\n                        ->rules(['date'])\n                        ->required()\n                        ->native(false),\n\n                    DatePicker::make('until_date')\n                        ->rules(['date'])\n                        ->required()\n                        ->native(false),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            '1' => 'belum disetujui',\n                            '2' => 'disetujui',\n                            '3' => 'tidak disetujui',\n                            '4' => 'pengajuan ulang',\n                        ]),\n\n                    RichEditor::make('notes')\n                        ->nullable()\n                        ->string()\n                        ->fileAttachmentsVisibility('public'),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('reason'),\n\n                TextColumn::make('from_date')->since(),\n\n                TextColumn::make('until_date')->since(),\n\n                TextColumn::make('status'),\n\n                TextColumn::make('created_by_id'),\n\n                TextColumn::make('createdBy.name'),\n\n                TextColumn::make('notes')->limit(255),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListPermitEmployees::route('/'),\n            'create' => Pages\\CreatePermitEmployee::route('/create'),\n            'view' => Pages\\ViewPermitEmployee::route('/{record}'),\n            'edit' => Pages\\EditPermitEmployee::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}