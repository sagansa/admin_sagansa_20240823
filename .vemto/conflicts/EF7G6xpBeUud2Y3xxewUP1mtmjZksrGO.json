{
    "conflicts": [
        {
            "id": "7d18bfd2-f536-42bb-bc6d-4b38555abe23",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Clusters\\HRD;\nuse App\\Filament\\Filters\\DateFilter;\nuse App\\Filament\\Filters\\SelectEmployeeFilter;\nuse App\\Filament\\Forms\\BaseSelect;\nuse App\\Filament\\Forms\\CurrencyInput;\nuse App\\Filament\\Forms\\DateInput;\nuse App\\Filament\\Forms\\PaymentStatusSelectInput;\nuse App\\Filament\\Forms\\StoreSelect;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\DailySalary;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Forms\\Components\\TextInput;\nuse App\\Filament\\Resources\\Panel\\DailySalaryResource\\Pages;\nuse App\\Filament\\Tables\\DailySalaryTable;\nuse App\\Models\\PaymentType;\nuse Filament\\Tables\\Actions\\ActionGroup;\nuse Filament\\Tables\\Enums\\FiltersLayout;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Illuminate\\Database\\Eloquent\\Collection;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass DailySalaryResource extends Resource\n{\n    protected static ?string $model = DailySalary::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $cluster = HRD::class;\n\n    protected static ?string $navigationGroup = 'Salaries';\n\n    protected static ?string $pluralLabel = 'Daily Salaries';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.dailySalaries.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.dailySalaries.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.dailySalaries.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 2])->schema([\n                    StoreSelect::make('store_id'),\n\n                    BaseSelect::make('shift_store_id')\n                        ->placeholder('Shift Store')\n                        ->relationship('shiftStore', 'name'),\n\n                    DateInput::make('date'),\n\n                    CurrencyInput::make('amount'),\n\n                    BaseSelect::make('payment_type_id')\n                        ->required()\n                        // ->relationship('paymentType', 'name')\n                        ->relationship(\n                            name: 'paymentType',\n                            modifyQueryUsing: fn(Builder $query) => $query->where('status', '1'),\n                        )\n                        ->getOptionLabelFromRecordUsing(fn(PaymentType $record) => \"{$record->name}\")\n                        ->searchable()\n                        ->preload(),\n\n                    PaymentStatusSelectInput::make('status'),\n\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        $dailySalaries = DailySalary::query();\n\n        if (!Auth::user()->hasRole('admin')) {\n            $dailySalaries->where('created_by_id', Auth::id());\n        }\n\n        return $table\n            ->query($dailySalaries)\n            ->poll('60s')\n            ->columns(\n                DailySalaryTable::schema()\n            )\n            ->filters([\n                SelectEmployeeFilter::make('created_by_id'),\n\n                SelectFilter::make('status')\n                    ->label('Status')\n                    ->hidden(fn() => !Auth::user()->hasRole('admin'))\n                    ->options([\n                        '1' => 'belum dibayar',\n                        '2' => 'sudah dibayar',\n                        '3' => 'siap dibayar',\n                        '4' => 'perbaiki',\n                    ]),\n\n                DateFilter::make('date'),\n\n            ], layout: FiltersLayout::AboveContent)\n\n            ->actions([\n                ActionGroup::make([\n                    Tables\\Actions\\EditAction::make()->visible(fn($record) => auth()->user()->can('update', $record)),\n                    Tables\\Actions\\ViewAction::make()->visible(fn($record) => auth()->user()->can('view', $record)),\n                ])\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                    Tables\\Actions\\BulkAction::make('setStatusToThree')\n                        ->label('Set Status to Siap Dibayar')\n                        ->icon('heroicon-o-check')\n                        ->requiresConfirmation()\n                        ->action(function (Collection $records) {\n                            DailySalary::whereIn('id', $records->pluck('id'))->update(['status' => 3]);\n                        })\n                        ->color('gray'),\n                    Tables\\Actions\\BulkAction::make('setStatusToOne')\n                        ->label('Set Status to Belum Dibayar')\n                        ->icon('heroicon-o-check')\n                        ->requiresConfirmation()\n                        ->action(function (Collection $records) {\n                            DailySalary::whereIn('id', $records->pluck('id'))->update(['status' => 1]);\n                        })\n                        ->color('warning'),\n                ]),\n            ])\n            ->defaultSort('date', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListDailySalaries::route('/'),\n            'create' => Pages\\CreateDailySalary::route('/create'),\n            'view' => Pages\\ViewDailySalary::route('/{record}'),\n            'edit' => Pages\\EditDailySalary::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\DailySalary;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse App\\Filament\\Resources\\Panel\\DailySalaryResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\DailySalaryResource\\RelationManagers;\n\nclass DailySalaryResource extends Resource\n{\n    protected static ?string $model = DailySalary::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.dailySalaries.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.dailySalaries.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.dailySalaries.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Select::make('store_id')\n                        ->required()\n                        ->relationship('store', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('shift_store_id')\n                        ->required()\n                        ->relationship('shiftStore', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    DatePicker::make('date')\n                        ->rules(['date'])\n                        ->required()\n                        ->native(false),\n\n                    TextInput::make('amount')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    Select::make('payment_type_id')\n                        ->required()\n                        ->relationship('paymentType', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('store.name'),\n\n                TextColumn::make('shiftStore.name'),\n\n                TextColumn::make('date')->since(),\n\n                TextColumn::make('amount'),\n\n                TextColumn::make('paymentType.name'),\n\n                TextColumn::make('created_by_id'),\n\n                TextColumn::make('createdBy.name'),\n\n                TextColumn::make('status'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListDailySalaries::route('/'),\n            'create' => Pages\\CreateDailySalary::route('/create'),\n            'view' => Pages\\ViewDailySalary::route('/{record}'),\n            'edit' => Pages\\EditDailySalary::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}