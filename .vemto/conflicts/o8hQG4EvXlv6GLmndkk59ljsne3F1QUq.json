{
    "conflicts": [
        {
            "id": "456facce-1f79-4962-9c5f-9126b202bb61",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Clusters\\Stock;\nuse App\\Filament\\Forms\\StoreSelect;\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\SelfConsumption;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\SelfConsumptionResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\SelfConsumptionResource\\RelationManagers;\n\nclass SelfConsumptionResource extends Resource\n{\n    protected static ?string $model = SelfConsumption::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $cluster = Stock::class;\n\n    protected static ?string $navigationGroup = 'Consumption';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.selfConsumptions.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.selfConsumptions.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.selfConsumptions.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    StoreSelect::make('store_id'),\n\n                    DatePicker::make('date')\n                        ->rules(['date'])\n                        ->required()\n                        ->native(false),\n\n                    Select::make('status')\n                        ->required()\n                        ->default('1')\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            '1' => 'belum diperiksa',\n                            '2' => 'valid',\n                            '3' => 'diperbaiki',\n                            '4' => 'periksa ulang',\n                        ]),\n\n                    RichEditor::make('notes')\n                        ->nullable()\n                        ->string()\n                        ->fileAttachmentsVisibility('public'),\n\n                    TextInput::make('created_by_id')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    Select::make('approved_by_id')\n                        ->required()\n                        ->relationship('createdBy', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('store.name'),\n\n                TextColumn::make('date')->since(),\n\n                TextColumn::make('status'),\n\n                TextColumn::make('notes')->limit(255),\n\n                TextColumn::make('created_by_id'),\n\n                TextColumn::make('createdBy.name'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListSelfConsumptions::route('/'),\n            'create' => Pages\\CreateSelfConsumption::route('/create'),\n            'view' => Pages\\ViewSelfConsumption::route('/{record}'),\n            'edit' => Pages\\EditSelfConsumption::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\SelfConsumption;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\SelfConsumptionResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\SelfConsumptionResource\\RelationManagers;\n\nclass SelfConsumptionResource extends Resource\n{\n    protected static ?string $model = SelfConsumption::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Stock';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.selfConsumptions.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.selfConsumptions.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.selfConsumptions.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Select::make('store_id')\n                        ->required()\n                        ->relationship('store', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    DatePicker::make('date')\n                        ->rules(['date'])\n                        ->required()\n                        ->native(false),\n\n                    Select::make('created_by_id')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('approved_by_id')\n                        ->required()\n                        ->relationship('createdBy', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    RichEditor::make('notes')\n                        ->nullable()\n                        ->string()\n                        ->fileAttachmentsVisibility('public'),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('store.name'),\n\n                TextColumn::make('date')->since(),\n\n                TextColumn::make('created_by_id'),\n\n                TextColumn::make('createdBy.name'),\n\n                TextColumn::make('status'),\n\n                TextColumn::make('notes')->limit(255),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListSelfConsumptions::route('/'),\n            'create' => Pages\\CreateSelfConsumption::route('/create'),\n            'view' => Pages\\ViewSelfConsumption::route('/{record}'),\n            'edit' => Pages\\EditSelfConsumption::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}