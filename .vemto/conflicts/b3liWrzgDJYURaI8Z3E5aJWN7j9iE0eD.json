{
    "conflicts": [
        {
            "id": "e2d9675e-1316-4fff-8289-0f75dfd47cd6",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\HygieneResource\\RelationManagers;\n\nuse App\\Filament\\Forms\\ImageInput;\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\nuse Filament\\Tables\\Actions\\ActionGroup;\n\nclass HygieneOfRoomsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'hygieneOfRooms';\n\n    protected static ?string $recordTitleAttribute = 'room.name';\n\n    public function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 1])->schema([\n                Select::make('room_id')\n                    ->required()\n                    ->relationship('room', 'name')\n                    ->preload(),\n\n                ImageInput::make('image')\n                    ->multiple()\n                    ->directory('images/Hygiene'),\n            ]),\n        ]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                TextColumn::make('room.name'),\n\n                ImageColumn::make('image')\n                    ->label('Images')\n                    ->circular()\n                    ->stacked(),\n            ])\n            ->filters([])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                ActionGroup::make([\n                    Tables\\Actions\\EditAction::make(),\n                    Tables\\Actions\\DeleteAction::make(),\n                ])\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ]);\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\HygieneResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\FileUpload;\nuse App\\Filament\\Resources\\Panel\\HygieneResource;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass HygieneOfRoomsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'hygieneOfRooms';\n\n    protected static ?string $recordTitleAttribute = 'image';\n\n    public function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 1])->schema([\n                Select::make('room_id')\n                    ->required()\n                    ->relationship('room', 'name')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n\n                FileUpload::make('image')\n                    ->rules(['image'])\n                    ->nullable()\n                    ->maxSize(1024)\n                    ->image()\n                    ->imageEditor()\n                    ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n            ]),\n        ]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                TextColumn::make('room.name'),\n\n                ImageColumn::make('image')->visibility('public'),\n            ])\n            ->filters([])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ]);\n    }\n}\n"
        }
    ]
}