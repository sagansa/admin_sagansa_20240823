{
    "conflicts": [
        {
            "id": "32b52d9a-6777-49b9-85a3-c382052d2365",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Clusters\\Stock;\nuse App\\Filament\\Forms\\TransferCardForm;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse App\\Models\\TransferCardStore;\nuse App\\Filament\\Resources\\Panel\\TransferCardStoreResource\\Pages;\nuse App\\Filament\\Tables\\TransferCardTable;\nuse App\\Filament\\Tables\\ValidAction;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass TransferCardStoreResource extends Resource\n{\n    protected static ?string $model = TransferCardStore::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $cluster = Stock::class;\n\n    protected static ?string $navigationGroup = 'Transfer';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.transferCardStores.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.transferCardStores.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.transferCardStores.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema(\n            TransferCardForm::getTransferCardStore(),\n        );\n    }\n\n    public static function table(Table $table): Table\n    {\n\n        $transferCardStore = TransferCardStore::query();\n\n        if (Auth::user()->hasRole('staff') || Auth::user()->hasRole('supervisor')) {\n            $transferCardStore->where(function($query) {\n                $query->where('received_by_id', Auth::id())\n                    ->orWhere('sent_by_id', Auth::id());\n            });\n        }\n\n        $transferCardStore->where('for', 'store');\n\n        return $table\n            ->poll('60s')\n            ->query($transferCardStore)\n            ->columns(\n                TransferCardTable::schema(TransferCardStore::class)\n                )\n            ->filters([])\n            ->actions(ValidAction::getAction(self::$model)['actions'])\n            ->bulkActions(ValidAction::getAction(self::$model)['bulkActions'])\n            ->defaultSort('date', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListTransferCardStores::route('/'),\n            'create' => Pages\\CreateTransferCardStore::route('/create'),\n            'view' => Pages\\ViewTransferCardStore::route('/{record}'),\n            'edit' => Pages\\EditTransferCardStore::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse App\\Models\\TransferCardStore;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Filament\\Forms\\Components\\FileUpload;\nuse App\\Filament\\Resources\\Panel\\TransferCardStoreResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\TransferCardStoreResource\\RelationManagers;\n\nclass TransferCardStoreResource extends Resource\n{\n    protected static ?string $model = TransferCardStore::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.transferCardStores.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.transferCardStores.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.transferCardStores.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    DatePicker::make('date')\n                        ->rules(['date'])\n                        ->required()\n                        ->native(false),\n\n                    FileUpload::make('image')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    TextInput::make('status')\n                        ->required()\n                        ->string(),\n\n                    Select::make('from_store_id')\n                        ->required()\n                        ->relationship('storeFrom', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('to_store_id')\n                        ->required()\n                        ->relationship('storeTo', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('sent_by_id')\n                        ->required()\n                        ->relationship('sentBy', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('received_by_id')\n                        ->required()\n                        ->relationship('receivedBy', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('for')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            'store' => 'Store',\n                            'storage' => 'Storage',\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('date')->since(),\n\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('status'),\n\n                TextColumn::make('storeFrom.name'),\n\n                TextColumn::make('storeTo.name'),\n\n                TextColumn::make('sentBy.name'),\n\n                TextColumn::make('receivedBy.name'),\n\n                TextColumn::make('for'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListTransferCardStores::route('/'),\n            'create' => Pages\\CreateTransferCardStore::route('/create'),\n            'view' => Pages\\ViewTransferCardStore::route('/{record}'),\n            'edit' => Pages\\EditTransferCardStore::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}