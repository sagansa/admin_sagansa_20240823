{
    "conflicts": [
        {
            "id": "54da8524-e9a2-40e5-ad79-db657d35cdcc",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Clusters\\Advances;\nuse App\\Filament\\Columns\\StatusColumn;\nuse App\\Filament\\Forms\\DateInput;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Forms\\Get;\nuse Filament\\Forms\\Set;\nuse Filament\\Tables\\Table;\nuse App\\Models\\AdvancePurchase;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\AdvancePurchaseResource\\Pages;\nuse App\\Filament\\Tables\\AdvancePurchaseTable;\nuse App\\Models\\CashAdvance;\nuse Filament\\Forms\\Components\\Repeater;\nuse App\\Models\\Product;\nuse App\\Models\\Store;\nuse App\\Models\\Supplier;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass AdvancePurchaseResource extends Resource\n{\n    protected static ?string $model = AdvancePurchase::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-s-shopping-cart';\n\n    protected static ?int $navigationSort = 2;\n\n    protected static ?string $cluster = Advances::class;\n\n    // protected static ?string $navigationGroup = 'Purchases';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.advancePurchases.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.advancePurchases.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.advancePurchases.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()\n                ->schema(static::getDetailsFormHeadSchema())\n                ->columns(2),\n\n            Section::make('Detail Pembelian')->schema([\n                self::getItemsRepeater(),\n            ]),\n\n            Section::make()\n                ->schema(static::getDetailsFormBottomSchema())\n                ->columns(2),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns(AdvancePurchaseTable::schema())\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('date', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [\n            //\n        ];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListAdvancePurchases::route('/'),\n            'create' => Pages\\CreateAdvancePurchase::route('/create'),\n            'view' => Pages\\ViewAdvancePurchase::route('/{record}'),\n            'edit' => Pages\\EditAdvancePurchase::route('/{record}/edit'),\n        ];\n    }\n\n    public static function getDetailsFormHeadSchema(): array\n    {\n        $userId = Auth::id();\n\n        $deliveryAddresses = Store::whereIn('user_id', [$userId, Auth::id()])->pluck('nickname', 'id');\n\n        // $deliveryAddresses = Store::\n        //     where('user_id', $userId)->\n        //     where('user_id', Auth::id())\n        //     ->pluck('nickname', 'id');\n\n        // dd($deliveryAddresses);\n\n        return [\n            FileUpload::make('image')\n                ->rules(['image'])\n                ->nullable()\n                ->maxSize(1024)\n                ->image()\n                ->imageEditor()\n                ->columnSpan([\n                    'full'\n                ])\n                ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n            Select::make('cash_advance_id')\n                    ->required()\n                    ->label('Cash Advance')\n                    ->options(CashAdvance::all()\n                        ->where('status', '=', 1)\n                        ->where('user_id', '=', Auth::id())\n                        ->pluck('cash_advance_name','id')),\n\n            Select::make('store_id')\n                ->required()\n                ->relationship('store', 'nickname')\n                ->searchable()\n                ->preload()\n                ->native(false),\n\n            Select::make('supplier_id')\n                ->label('Supplier')\n                ->required()\n                ->options(Supplier::all()->where('status', '<>', 3)->pluck('supplier_name', 'id'))\n                ->searchable()\n                ->preload()\n                ->native(false),\n\n            DateInput::make('date'),\n\n            Select::make('status')\n                ->required()\n                ->default('1')\n                ->preload()\n                ->native(false)\n                ->options([\n                    '1' => 'belum diperiksa',\n                    '2' => 'valid',\n                    '3' => 'diperbaiki',\n                    '4' => 'periksa ulang',\n                ]),\n        ];\n    }\n\n    public static function getItemsRepeater(): Repeater\n    {\n        return Repeater::make('detailAdvancePurchases')\n            ->relationship()\n            ->schema([\n                Select::make('product_id')\n                    ->label('Product')\n                    ->searchable()\n                    ->options(Product::query()->pluck('name', 'id'))\n                    ->required()\n                    ->reactive()\n                    ->distinct()\n                    ->disableOptionsWhenSelectedInSiblingRepeaterItems()\n                    ->columnSpan([\n                        'md' => 4,\n                    ])\n                    ->searchable(),\n\n                TextInput::make('quantity')\n                    ->label('Quantity')\n                    ->numeric()\n                    ->default(1)\n                    ->minValue(1)\n                    ->required()\n                    ->suffix(function (Get $get) {\n                        $product = Product::find($get('product_id'));\n                        return $product ? $product->unit->unit : '';\n                    })\n                    ->debounce(500)\n                    ->columnSpan([\n                        'md' => 2,\n                    ])\n                    ->reactive()\n                    ->afterStateUpdated(function (Get $get, Set $set) {\n                        self::updateUnitPrice($get, $set);\n                    }),\n\n                TextInput::make('price')\n                    ->required()\n                    ->minValue(0)\n                    ->prefix('Rp')\n                    ->columnSpan([\n                        'md' => 2,\n                    ])\n                    ->debounce(500)\n                    ->numeric()\n                    ->reactive()\n                    ->distinct()\n                    ->afterStateUpdated(function (Get $get, Set $set) {\n                        self::updateUnitPrice($get, $set);\n                        self::updateTotalPrice($get, $set);\n                    }),\n\n                TextInput::make('unit_price')\n                    ->label('Unit Price')\n                    ->readOnly()\n                    ->integer()\n                    ->prefix('Rp')\n                    ->columnSpan([\n                        'md' => 2,\n                    ]),\n            ])\n            ->columns([\n                'md' => 10,\n            ])\n            ->afterStateUpdated(function (Get $get, Set $set) {\n                self::updateTotalPrice($get, $set);\n            });\n    }\n\n    public static function getDetailsFormBottomSchema(): array\n    {\n        return [\n            Section::make()->schema([\n                TextInput::make('subtotal_price')\n                    ->readOnly()\n                    ->default(0)\n                    ->numeric()\n                    ->prefix('Rp'),\n\n                TextInput::make('discount_price')\n                    ->required()\n                    ->numeric()\n                    ->debounce(1000)\n                    ->default(0)\n                    ->reactive()\n                    ->prefix('Rp')\n                   ->afterStateUpdated(fn ($state, callable $set, $get) => $set('total_price', $get('subtotal_price') - $state)),\n\n                TextInput::make('total_price')\n                    ->numeric()\n                    ->default(0)\n                    ->minValue(0)\n                    ->prefix('Rp')\n                    ->readOnly()\n                    ->reactive(),\n\n                RichEditor::make('notes')\n                    ->nullable()\n                    ->string()\n                    ->fileAttachmentsVisibility('public'),\n            ]),\n        ];\n    }\n\n    protected static function updateUnitPrice(Get $get, Set $set): void\n    {\n        // Mengambil nilai dan mengonversi ke float, dengan default 0 untuk price dan 1 untuk quantity\n        $price = $get('price') !== null ? (int) $get('price') : 1;\n        $quantity = $get('quantity') !== null ? (int) $get('quantity') : 1;\n\n        // Cek jika quantity 0 untuk menghindari pembagian dengan 0\n         $unitPrice = $quantity > 0 ? $price / $quantity : 0;\n\n        // $unitPrice = $price / $quantity;\n        $set('unit_price', number_format($unitPrice, 0, ',', ''));\n    }\n\n    protected static function updateTotalPrice(Get $get, Set $set): void\n    {\n        // Get the repeater items or initialize to an empty array if null\n        $repeaterItems = $get('detailAdvancePurchases') ?? [];\n\n        $subtotalPrice = 0;\n\n        foreach ($repeaterItems as $item) {\n            if (isset($item['price'])) {\n                $subtotalPrice += (int) $item['price'];\n            }\n        }\n\n        $discountPrice = $get('discount_price') !== null ? (int) $get('discount_price') : 0;\n        $totalPrice = $subtotalPrice - $discountPrice;\n\n        $set('subtotal_price', $subtotalPrice);\n        $set('total_price', $totalPrice);\n    }\n}\n\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\AdvancePurchase;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\AdvancePurchaseResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\AdvancePurchaseResource\\RelationManagers;\n\nclass AdvancePurchaseResource extends Resource\n{\n    protected static ?string $model = AdvancePurchase::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.advancePurchases.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.advancePurchases.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.advancePurchases.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    FileUpload::make('image')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    Select::make('cash_advance_id')\n                        ->nullable()\n                        ->relationship('cashAdvance', 'image')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('supplier_id')\n                        ->required()\n                        ->relationship('supplier', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('store_id')\n                        ->required()\n                        ->relationship('store', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    DatePicker::make('date')\n                        ->rules(['date'])\n                        ->required()\n                        ->native(false),\n\n                    TextInput::make('subtotal_price')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('discount_price')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('total_price')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    Select::make('user_id')\n                        ->required()\n                        ->relationship('user', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    RichEditor::make('notes')\n                        ->nullable()\n                        ->string()\n                        ->fileAttachmentsVisibility('public'),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('cashAdvance.image'),\n\n                TextColumn::make('supplier.name'),\n\n                TextColumn::make('store.name'),\n\n                TextColumn::make('date')->since(),\n\n                TextColumn::make('subtotal_price'),\n\n                TextColumn::make('discount_price'),\n\n                TextColumn::make('total_price'),\n\n                TextColumn::make('user.name'),\n\n                TextColumn::make('notes')->limit(255),\n\n                TextColumn::make('status'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListAdvancePurchases::route('/'),\n            'create' => Pages\\CreateAdvancePurchase::route('/create'),\n            'view' => Pages\\ViewAdvancePurchase::route('/{record}'),\n            'edit' => Pages\\EditAdvancePurchase::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}