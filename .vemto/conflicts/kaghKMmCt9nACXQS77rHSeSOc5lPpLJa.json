{
    "conflicts": [
        {
            "id": "1d5eeede-28cc-46cb-8819-5ac236af272a",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Clusters\\Sales;\nuse App\\Filament\\Columns\\CurrencyColumn;\nuse App\\Filament\\Columns\\DeliveryStatusColumn;\nuse App\\Filament\\Columns\\ImageOpenUrlColumn;\nuse App\\Filament\\Filters\\SelectStoreFilter;\nuse App\\Filament\\Forms\\CurrencyInput;\nuse App\\Filament\\Forms\\DateInput;\nuse App\\Filament\\Forms\\ImageInput;\nuse App\\Filament\\Forms\\Notes;\nuse App\\Filament\\Forms\\StoreSelect;\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\SalesOrderRetur;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Forms\\Components\\FileUpload;\nuse App\\Filament\\Resources\\Panel\\SalesOrderReturResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\SalesOrderReturResource\\RelationManagers;\nuse Filament\\Forms\\Components\\Placeholder;\nuse Filament\\Tables\\Actions\\ActionGroup;\nuse Filament\\Tables\\Columns\\Summarizers\\Sum;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass SalesOrderReturResource extends Resource\n{\n    protected static ?string $model = SalesOrderRetur::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 4;\n\n    protected static ?string $navigationGroup = 'Sales';\n\n    protected static ?string $pluralLabel = 'Retur';\n\n    protected static ?string $cluster = Sales::class;\n\n    // public static function getModelLabel(): string\n    // {\n    //     return __('crud.salesOrderReturs.itemTitle');\n    // }\n\n    // public static function getPluralModelLabel(): string\n    // {\n    //     return __('crud.salesOrderReturs.collectionTitle');\n    // }\n\n    // public static function getNavigationLabel(): string\n    // {\n    //     return __('crud.salesOrderReturs.collectionTitle');\n    // }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->inlineLabel()->schema([\n                    ImageInput::make('image_delivery'),\n                ]),\n\n                Grid::make(['default' => 2])->inlineLabel()->schema([\n\n                    Placeholder::make('store_id')\n                        ->label('Store')\n                        ->content(fn(SalesOrderRetur $record): string => $record->store->nickname),\n\n                    Placeholder::make('delivery_date')\n                        ->label('Delivery Date')\n                        ->content(fn(SalesOrderRetur $record): string => $record->delivery_date),\n\n                    Placeholder::make('online_shop_provider_id')\n                        ->label('Online Shop')\n                        ->content(fn(SalesOrderRetur $record): string => $record->onlineShopProvider->name),\n\n                    Placeholder::make('delivery_service_id')\n                        ->label('Delivery Service')\n                        ->content(fn(SalesOrderRetur $record): string => $record->deliveryService->name),\n\n                    Placeholder::make('receipt_no')\n                        ->content(fn(SalesOrderRetur $record): string => $record->receipt_no),\n\n                    Placeholder::make('Total Price')\n                        ->content(fn(SalesOrderRetur $record): string => 'Rp ' . number_format($record->total_price, 0, ',', '.') . ''),\n\n                ]),\n                Grid::make(['default' => 1])->schema([\n                    Select::make('delivery_status')\n                        ->required()\n                        ->inlineLabel()\n                        ->hidden(fn($operation) => $operation === 'create')\n                        ->options([\n                            '3' => 'sudah dikirim',\n                            '6' => 'dikembalikan'\n                        ]),\n\n                    Notes::make('notes'),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->query(SalesOrderRetur::query()->where('for', 3)->where('delivery_status', ['3', '6']))\n            ->columns([\n                // ImageOpenUrlColumn::make('image_payment')\n                //     ->disabled(fn() => Auth::user()->hasRole('staff') || Auth::user()->hasRole('storage-staff'))\n                //     ->label('Payment')\n                //     ->url(fn($record) => asset('storage/' . $record->image_payment)),\n\n                // ImageOpenUrlColumn::make('image_delivery')\n                //     ->label('Delivery')\n                //     ->url(fn($record) => asset('storage/' . $record->image_delivery)),\n\n                TextColumn::make('delivery_date'),\n\n                TextColumn::make('store.nickname'),\n\n                TextColumn::make('receipt_no')\n                    ->searchable(),\n\n                TextColumn::make('onlineShopProvider.name'),\n\n                TextColumn::make('deliveryService.name'),\n\n                TextColumn::make('deliveryAddress.name'),\n\n                TextColumn::make('orderedBy.name'),\n\n                TextColumn::make('assignedBy.name'),\n\n                CurrencyColumn::make('total_price')\n                    ->label('Total Price')\n                    ->visible(fn() => Auth::user()->hasRole('admin'))\n                    ->summarize(Sum::make()\n                        ->numeric(\n                            thousandsSeparator: '.'\n                        )\n                        ->label('')\n                        ->prefix('Rp ')),\n\n                DeliveryStatusColumn::make('delivery_status')\n                    ->label('Status'),\n\n            ])\n            ->filters([\n                SelectStoreFilter::make('store_id'),\n            ])\n            ->actions([\n                ActionGroup::make([\n                    Tables\\Actions\\EditAction::make()\n                        ->visible(fn(SalesOrderRetur $record) => !in_array($record->delivery_status, [2]))->slideOver(),\n                    Tables\\Actions\\ViewAction::make()\n                        ->visible(fn(SalesOrderRetur $record) => in_array($record->delivery_status, [2])),\n                ])\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('delivery_date', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListSalesOrderReturs::route('/'),\n            'create' => Pages\\CreateSalesOrderRetur::route('/create'),\n            // 'view' => Pages\\ViewSalesOrderRetur::route('/{record}'),\n            // 'edit' => Pages\\EditSalesOrderRetur::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\SalesOrderRetur;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Forms\\Components\\FileUpload;\nuse App\\Filament\\Resources\\Panel\\SalesOrderReturResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\SalesOrderReturResource\\RelationManagers;\n\nclass SalesOrderReturResource extends Resource\n{\n    protected static ?string $model = SalesOrderRetur::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.salesOrderReturs.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.salesOrderReturs.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.salesOrderReturs.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Select::make('for')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            '1' => 'order',\n                            '2' => 'employee',\n                            '3' => 'online',\n                        ]),\n\n                    DatePicker::make('delivery_date')\n                        ->rules(['date'])\n                        ->required()\n                        ->native(false),\n\n                    Select::make('online_shop_provider_id')\n                        ->nullable()\n                        ->relationship('onlineShopProvider', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('delivery_service_id')\n                        ->nullable()\n                        ->relationship('deliveryService', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('delivery_address_id')\n                        ->nullable()\n                        ->relationship('deliveryAddress', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('transfer_to_account_id')\n                        ->nullable()\n                        ->relationship('transferToAccount', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('shipping_cost')\n                        ->nullable()\n                        ->numeric()\n                        ->step(1),\n\n                    Select::make('store_id')\n                        ->nullable()\n                        ->relationship('store', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('receipt_no')\n                        ->nullable()\n                        ->string(),\n\n                    Select::make('ordered_by_id')\n                        ->nullable()\n                        ->relationship('orderedBy', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('assigned_by_id')\n                        ->nullable()\n                        ->relationship('orderedBy', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    RichEditor::make('notes')\n                        ->nullable()\n                        ->string()\n                        ->fileAttachmentsVisibility('public'),\n\n                    TextInput::make('total_price')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    FileUpload::make('image_payment')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    FileUpload::make('image_delivery')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    Select::make('payment_status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('delivery_status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('for'),\n\n                TextColumn::make('delivery_date')->since(),\n\n                TextColumn::make('onlineShopProvider.name'),\n\n                TextColumn::make('deliveryService.name'),\n\n                TextColumn::make('deliveryAddress.name'),\n\n                TextColumn::make('transferToAccount.name'),\n\n                TextColumn::make('shipping_cost'),\n\n                TextColumn::make('store.name'),\n\n                TextColumn::make('receipt_no'),\n\n                TextColumn::make('orderedBy.name'),\n\n                TextColumn::make('orderedBy.name'),\n\n                TextColumn::make('notes')->limit(255),\n\n                TextColumn::make('total_price'),\n\n                ImageColumn::make('image_payment')->visibility('public'),\n\n                ImageColumn::make('image_delivery')->visibility('public'),\n\n                TextColumn::make('payment_status'),\n\n                TextColumn::make('delivery_status'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListSalesOrderReturs::route('/'),\n            'create' => Pages\\CreateSalesOrderRetur::route('/create'),\n            'view' => Pages\\ViewSalesOrderRetur::route('/{record}'),\n            'edit' => Pages\\EditSalesOrderRetur::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}