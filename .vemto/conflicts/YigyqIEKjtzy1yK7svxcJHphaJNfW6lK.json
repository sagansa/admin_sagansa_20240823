{
    "conflicts": [
        {
            "id": "90ba9f52-4bd6-4635-ae88-9753e428817d",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Clusters\\Invoices;\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\RequestPurchase;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse App\\Filament\\Resources\\Panel\\RequestPurchaseResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\RequestPurchaseResource\\RelationManagers;\nuse Filament\\Forms\\Components\\Repeater;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass RequestPurchaseResource extends Resource\n{\n    protected static ?string $model = RequestPurchase::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Purchase';\n\n    protected static ?string $cluster = Invoices::class;\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.requestPurchases.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.requestPurchases.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.requestPurchases.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Select::make('store_id')\n                        ->required()\n                        ->relationship('store', 'nickname')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    DatePicker::make('date')\n                        ->default('today')\n                        ->rules(['date'])\n                        ->required()\n                        ->native(false),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            '1' => 'Processes',\n                            '2' => 'Approved',\n                            '3' => 'Done',\n                            '4' => 'Rejected',\n                            '5' => 'Not Valid',\n                            '6' => 'Not Used',\n                        ]),\n                ]),\n            ]),\n\n            Section::make()->schema([\n                self::getItemsRepeater(),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('store.nickname'),\n\n                TextColumn::make('date'),\n\n                TextColumn::make('user.name'),\n\n                // TextColumn::make('status'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                // Tables\\Actions\\ViewAction::make(),\n            ])\n            // ->bulkActions([\n            //     Tables\\Actions\\BulkActionGroup::make([\n            //         Tables\\Actions\\DeleteBulkAction::make(),\n            //     ]),\n            // ])\n            ->defaultSort('date', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListRequestPurchases::route('/'),\n            'create' => Pages\\CreateRequestPurchase::route('/create'),\n            'view' => Pages\\ViewRequestPurchase::route('/{record}'),\n            'edit' => Pages\\EditRequestPurchase::route('/{record}/edit'),\n        ];\n    }\n\n    public static function getItemsRepeater(): Repeater\n    {\n        return Repeater::make('detailRequests')\n            ->relationship()\n            ->minItems(1)\n            ->schema([\n                Select::make('product_id')\n                    ->relationship('product', 'name')\n                    ->required()\n                    ->searchable()\n                    ->disableOptionsWhenSelectedInSiblingRepeaterItems()\n                    ->distinct()\n                    ->columnSpan(4),\n                TextInput::make('quantity_plan')\n                    ->required()\n                    ->minValue(1)\n                    ->numeric()\n                    ->columnSpan(3),\n                Select::make('status')\n                    ->options([\n                            '1' => 'Processed',\n                            '2' => 'Approved',\n                            '3' => 'Done',\n                            '4' => 'Rejected',\n                            '5' => 'Not Valid',\n                            '6' => 'Not Used',\n                        ])\n                    ->columnSpan(3),\n                    // ->visible(fn () => Auth::user()->hasRole('super_admin')),\n                // Select::make('status')\n                //     ->options([\n                //             '1' => 'Processed',\n                //         ])\n                //     ->columnSpan(3),\n                    // ->visible(fn () => Auth::user()->hasRole('staff')),\n\n            ])\n            ->columns([\n                'md' => 10,\n            ])\n            ->defaultItems(1);\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\RequestPurchase;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse App\\Filament\\Resources\\Panel\\RequestPurchaseResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\RequestPurchaseResource\\RelationManagers;\n\nclass RequestPurchaseResource extends Resource\n{\n    protected static ?string $model = RequestPurchase::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.requestPurchases.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.requestPurchases.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.requestPurchases.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Select::make('store_id')\n                        ->required()\n                        ->relationship('store', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    DatePicker::make('date')\n                        ->rules(['date'])\n                        ->required()\n                        ->native(false),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('store.name'),\n\n                TextColumn::make('date')->since(),\n\n                TextColumn::make('user.name'),\n\n                TextColumn::make('status'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListRequestPurchases::route('/'),\n            'create' => Pages\\CreateRequestPurchase::route('/create'),\n            'view' => Pages\\ViewRequestPurchase::route('/{record}'),\n            'edit' => Pages\\EditRequestPurchase::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}