{
    "conflicts": [
        {
            "id": "6db550c4-0d40-4411-a1e8-9d9ef0405711",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Clusters\\Store;\nuse App\\Filament\\Forms\\StoreSelect;\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse App\\Models\\Location;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\LocationResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\LocationResource\\RelationManagers;\n\nclass LocationResource extends Resource\n{\n    protected static ?string $model = Location::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 2;\n\n    protected static ?string $cluster = Store::class;\n\n    protected static ?string $navigationGroup = 'Store';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.locations.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.locations.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.locations.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                    StoreSelect::make('store_id'),\n\n                    TextInput::make('contact_person_name')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('contact_person_number')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('address')\n                        ->required()\n                        ->string(),\n\n                    Select::make('province_id')\n                        ->required()\n                        ->relationship('province', 'name')\n                        ->searchable()\n                        ->preload()\n                        ,\n\n                    Select::make('city_id')\n                        ->required()\n                        ->relationship('city', 'name')\n                        ->searchable()\n                        ->preload()\n                        ,\n\n                    Select::make('district_id')\n                        ->required()\n                        ->relationship('district', 'name')\n                        ->searchable()\n                        ->preload()\n                        ,\n\n                    Select::make('subdistrict_id')\n                        ->required()\n                        ->relationship('subdistrict', 'name')\n                        ->searchable()\n                        ->preload()\n                        ,\n\n                    Select::make('postal_code_id')\n                        ->required()\n                        ->relationship('postalCode', 'id')\n                        ->searchable()\n                        ->preload()\n                        ,\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('store.name'),\n\n                TextColumn::make('contact_person_name'),\n\n                TextColumn::make('contact_person_number'),\n\n                TextColumn::make('address'),\n\n                TextColumn::make('province.name'),\n\n                TextColumn::make('city.name'),\n\n                TextColumn::make('district.name'),\n\n                TextColumn::make('subdistrict.name'),\n\n                TextColumn::make('postalCode.id'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListLocations::route('/'),\n            'create' => Pages\\CreateLocation::route('/create'),\n            'view' => Pages\\ViewLocation::route('/{record}'),\n            'edit' => Pages\\EditLocation::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse App\\Models\\Location;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\LocationResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\LocationResource\\RelationManagers;\n\nclass LocationResource extends Resource\n{\n    protected static ?string $model = Location::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.locations.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.locations.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.locations.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                    Select::make('store_id')\n                        ->required()\n                        ->relationship('store', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('contact_person_name')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('contact_person_number')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('address')\n                        ->required()\n                        ->string(),\n\n                    Select::make('province_id')\n                        ->required()\n                        ->relationship('province', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('city_id')\n                        ->required()\n                        ->relationship('city', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('district_id')\n                        ->required()\n                        ->relationship('district', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('subdistrict_id')\n                        ->required()\n                        ->relationship('subdistrict', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('postal_code_id')\n                        ->required()\n                        ->relationship('postalCode', 'id')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('store.name'),\n\n                TextColumn::make('contact_person_name'),\n\n                TextColumn::make('contact_person_number'),\n\n                TextColumn::make('address'),\n\n                TextColumn::make('province.name'),\n\n                TextColumn::make('city.name'),\n\n                TextColumn::make('district.name'),\n\n                TextColumn::make('subdistrict.name'),\n\n                TextColumn::make('postalCode.id'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListLocations::route('/'),\n            'create' => Pages\\CreateLocation::route('/create'),\n            'view' => Pages\\ViewLocation::route('/{record}'),\n            'edit' => Pages\\EditLocation::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}