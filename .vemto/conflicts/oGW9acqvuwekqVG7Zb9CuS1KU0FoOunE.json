{
    "conflicts": [
        {
            "id": "64616f61-6995-41bf-bcdb-cd9dc7c4caff",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Clusters\\Store;\nuse App\\Filament\\Filters\\SelectStoreFilter;\nuse App\\Filament\\Forms\\BaseRepeaterSelect;\nuse App\\Filament\\Forms\\ImageInput;\nuse App\\Filament\\Forms\\StoreSelect;\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse App\\Models\\Hygiene;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\HygieneResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\HygieneResource\\RelationManagers;\nuse App\\Models\\Room;\nuse Filament\\Forms\\Components\\Repeater;\nuse Filament\\Tables\\Actions\\ActionGroup;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass HygieneResource extends Resource\n{\n    protected static ?string $model = Hygiene::class;\n\n    // protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Hygiene';\n\n    protected static ?string $cluster = Store::class;\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.hygienes.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.hygienes.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.hygienes.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    StoreSelect::make('store_id'),\n                ]),\n            ]),\n            Section::make()->schema(\n                self::getItemsRepeater(),\n            ),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->query(self::getQuery())\n            ->columns(self::getColumns())\n            ->filters([\n                SelectStoreFilter::make('store_id'),\n            ])\n            ->actions([\n                ActionGroup::make([\n                    Tables\\Actions\\EditAction::make(),\n                    Tables\\Actions\\ViewAction::make(),\n                ])\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('created_at', 'desc');\n    }\n\n    protected static function getQuery(): Builder\n    {\n        $query = Hygiene::query();\n        if (Auth::user()->hasRole('staff')) {\n            $query->where('created_by_id', Auth::id());\n        }\n        return $query;\n    }\n\n    protected static function getColumns(): array\n    {\n        return [\n            TextColumn::make('store.nickname'),\n            TextColumn::make('created_at'),\n            TextColumn::make('createdBy.name')\n                ->visible(fn($record) => auth()->user()->hasRole('admin') || auth()->user()->hasRole('super_admin')),\n            TextColumn::make('approvedBy.name'),\n        ];\n    }\n\n    public static function getRelations(): array\n    {\n        return [\n            // RelationManagers\\HygieneOfRoomsRelationManager::class\n        ];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListHygienes::route('/'),\n            'create' => Pages\\CreateHygiene::route('/create'),\n            'view' => Pages\\ViewHygiene::route('/{record}'),\n            'edit' => Pages\\EditHygiene::route('/{record}/edit'),\n        ];\n    }\n\n    public static function getItemsRepeater(): array\n    {\n        $rooms = Room::orderBy('name', 'asc')->get()->map(fn($item) => [\n            'room_id' => $item->id,\n            'image' => $item->image,\n        ])->toArray();\n\n        return [\n            Repeater::make('hygieneOfRooms')\n                ->hiddenLabel()\n                ->default($rooms)\n                ->relationship()\n                ->addable(false)\n                ->deletable(false)\n                ->schema([\n                    BaseRepeaterSelect::make('room_id')\n                        ->relationship('room', 'name'),\n                    ImageInput::make('image')\n                        ->multiple()\n                        ->hiddenLabel()\n                        ->directory('images/Hygiene'),\n                ])\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse App\\Models\\Hygiene;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\HygieneResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\HygieneResource\\RelationManagers;\n\nclass HygieneResource extends Resource\n{\n    protected static ?string $model = Hygiene::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'HRD';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.hygienes.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.hygienes.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.hygienes.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Select::make('store_id')\n                        ->required()\n                        ->relationship('store', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('created_by_id')\n                        ->nullable()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('approved_by_id')\n                        ->nullable()\n                        ->relationship('createdBy', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    RichEditor::make('notes')\n                        ->nullable()\n                        ->string()\n                        ->fileAttachmentsVisibility('public'),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('store.name'),\n\n                TextColumn::make('created_by_id'),\n\n                TextColumn::make('createdBy.name'),\n\n                TextColumn::make('status'),\n\n                TextColumn::make('notes')->limit(255),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [RelationManagers\\HygieneOfRoomsRelationManager::class];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListHygienes::route('/'),\n            'create' => Pages\\CreateHygiene::route('/create'),\n            'view' => Pages\\ViewHygiene::route('/{record}'),\n            'edit' => Pages\\EditHygiene::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}